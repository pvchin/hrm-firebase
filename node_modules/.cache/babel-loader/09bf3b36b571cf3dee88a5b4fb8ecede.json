{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\ConvertEmpEmail.js\";\nimport React, { useState } from \"react\";\nimport { Box, Container, Divider, Input, FormControl, Heading, HStack, VStack, Text } from \"@chakra-ui/react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_values = {\n  name: \"\",\n  email: \"\",\n  newemail: \"\",\n  loginpw: \"\"\n};\n\nconst ConvertEmpEmail = () => {\n  const [state, SetState] = useState(initial_values);\n  const {\n    handleSubmit,\n    control,\n    setValue,\n    register\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    minW: \"80%\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"EMPLOYEE EMAIL CONVERSION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"name\",\n            defaultValue: state.name,\n            render: ({\n              field: {\n                onChange,\n                value,\n                ref\n              }\n            }) => /*#__PURE__*/_jsxDEV(HStack, {\n              w: \"100%\",\n              py: 1,\n              align: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                as: \"b\",\n                fontSize: \"sm\",\n                children: \"Employee Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"name\",\n                value: value || \"\",\n                width: \"full\",\n                onChange: onChange,\n                borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                ,\n                ref: ref,\n                placeholder: \"employee name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ConvertEmpEmail;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/ConvertEmpEmail.js"],"names":["React","useState","Box","Container","Divider","Input","FormControl","Heading","HStack","VStack","Text","Controller","useForm","initial_values","name","email","newemail","loginpw","ConvertEmpEmail","state","SetState","handleSubmit","control","setValue","register","field","onChange","value","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,GADF,EAEEC,SAFF,EAGEC,OAHF,EAIEC,KAJF,EAKEC,WALF,EAMEC,OANF,EAOEC,MAPF,EAQEC,MARF,EASEC,IATF,QAUO,kBAVP;AAWA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,iBAApC;;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,IAAI,EAAE,EADe;AAErBC,EAAAA,KAAK,EAAE,EAFc;AAGrBC,EAAAA,QAAQ,EAAE,EAHW;AAIrBC,EAAAA,OAAO,EAAE;AAJY,CAAvB;;AAOA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAACY,cAAD,CAAlC;AACA,QAAM;AAAEQ,IAAAA,YAAF;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA;AAAnC,MAAgDZ,OAAO,EAA7D;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,IAAI,EAAC,KAAhB;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,GAAD;AAAA,6BACE;AAAA,+BACE,QAAC,WAAD;AAAA,iCACE,QAAC,UAAD;AACE,YAAA,OAAO,EAAEU,OADX;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,YAAY,EAAEH,KAAK,CAACL,IAHtB;AAIE,YAAA,MAAM,EAAE,CAAC;AAAEW,cAAAA,KAAK,EAAE;AAAEC,gBAAAA,QAAF;AAAYC,gBAAAA,KAAZ;AAAmBC,gBAAAA;AAAnB;AAAT,aAAD,kBACN,QAAC,MAAD;AAAQ,cAAA,CAAC,EAAC,MAAV;AAAiB,cAAA,EAAE,EAAE,CAArB;AAAwB,cAAA,KAAK,EAAC,MAA9B;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAC,GAAT;AAAa,gBAAA,QAAQ,EAAC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,KAAD;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,KAAK,EAAED,KAAK,IAAI,EAFlB;AAGE,gBAAA,KAAK,EAAC,MAHR;AAIE,gBAAA,QAAQ,EAAED,QAJZ;AAKE,gBAAA,WAAW,EAAC,UALd,CAME;AANF;AAOE,gBAAA,GAAG,EAAEE,GAPP;AAQE,gBAAA,WAAW,EAAC;AARd;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAtCD;;AAwCA,eAAeV,eAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Container,\r\n  Divider,\r\n  Input,\r\n  FormControl,\r\n  Heading,\r\n  HStack,\r\n  VStack,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\n\r\nconst initial_values = {\r\n  name: \"\",\r\n  email: \"\",\r\n  newemail: \"\",\r\n  loginpw: \"\",\r\n};\r\n\r\nconst ConvertEmpEmail = () => {\r\n  const [state, SetState] = useState(initial_values);\r\n  const { handleSubmit, control, setValue, register } = useForm();\r\n\r\n  return (\r\n    <Container minW=\"80%\">\r\n      <Heading>EMPLOYEE EMAIL CONVERSION</Heading>\r\n      <Divider />\r\n      <Box>\r\n        <form>\r\n          <FormControl>\r\n            <Controller\r\n              control={control}\r\n              name=\"name\"\r\n              defaultValue={state.name}\r\n              render={({ field: { onChange, value, ref } }) => (\r\n                <HStack w=\"100%\" py={1} align=\"left\">\r\n                  <Text as=\"b\" fontSize=\"sm\">\r\n                    Employee Name\r\n                  </Text>\r\n                  <Input\r\n                    name=\"name\"\r\n                    value={value || \"\"}\r\n                    width=\"full\"\r\n                    onChange={onChange}\r\n                    borderColor=\"gray.400\"\r\n                    //textTransform=\"capitalize\"\r\n                    ref={ref}\r\n                    placeholder=\"employee name\"\r\n                  />\r\n                </HStack>\r\n              )}\r\n            />\r\n          </FormControl>\r\n        </form>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ConvertEmpEmail;\r\n"]},"metadata":{},"sourceType":"module"}