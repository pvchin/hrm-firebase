{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\ConvertEmpEmail.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { //AspectRatio,\nBox, Button, Center, Container, Divider, FormControl, Heading //Image,\n, Input, InputLeftAddon, InputGroup, Select //Stack,\n, HStack, VStack //Wrap,\n, useDisclosure } from \"@chakra-ui/react\"; //import * as emailjs from \"emailjs-com\";\n//import { useRecoilState } from \"recoil\";\n//import { loginLevelState } from \"./data/atomdata\";\n//import { makeStyles } from \"@material-ui/core/styles\";\n\nimport { useCustomToast } from \"../helpers/useCustomToast\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\nimport { useHoc } from \"./hoc/useHoc\";\nimport { useUpdateHoc } from \"./hoc/useUpdateHoc\";\nimport App from \"../utils/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_state = {\n  name: \"\",\n  email: \"\",\n  newemail: \"\",\n  pw: \"\"\n};\n\nconst EmailConversion = () => {\n  const navigate = useNavigate();\n  const toast = useCustomToast();\n  const field_width = \"40\";\n  const [state, setState] = useState(initial_state);\n  const [empid, setEmpId] = useState(\"\");\n  const {\n    employees,\n    setEmployeeId\n  } = useEmployees();\n  const updateEmployees = useUpdateEmployees();\n  const {\n    hoc,\n    setHocId\n  } = useHoc();\n  const updateHoc = useUpdateHoc();\n  const {\n    handleSubmit,\n    control,\n    //register,\n    //reset,\n    setValue,\n    getValues,\n    formState: {\n      isSubmitting\n    }\n  } = useForm({\n    defaultValues: state\n  });\n  const {\n    isOpen: isAlertOpen,\n    onOpen: onAlertOpen,\n    onClose: onAlertClose\n  } = useDisclosure();\n\n  const handleEmail = value => {\n    const data = employees.filter(r => r.name === value);\n    console.log(\"emp\", data);\n    setEmpId(prev => prev = data[0].id);\n    setValue(\"email\", data[0].email);\n  };\n\n  const handleOnSubmit = () => {\n    const newemail = getValues(\"newemail\");\n    const isexit = employees.filter(r => r.email === newemail);\n\n    if (isexit.length > 0) {\n      toast({\n        title: `${newemail} is Existed!`,\n        status: \"warning\"\n      });\n    } else {\n      onAlertOpen();\n    }\n  };\n\n  const handleConvertConfirm = () => {\n    const newemail = getValues(\"newemail\");\n    const newpw = getValues(\"pw\");\n    const empdata = employees.filter(r => r.id === empid);\n    const {\n      Calculation,\n      ...fields\n    } = empdata[0];\n    const updEmpdata = { ...fields,\n      email: newemail\n    }; //create firebase email\n\n    createEmail({\n      email: newemail,\n      pw: newpw\n    }); //update emp record\n    //console.log(\"updemp\", updEmpdata)\n\n    updateEmployees({\n      id: empid,\n      ...updEmpdata\n    }); //update hoc\n\n    hoc && hoc.filter(r => r.empid === empid).forEach(rec => {\n      const updrec = { ...rec,\n        email: newemail\n      };\n      updateHoc({\n        id: rec.id,\n        ...updrec\n      });\n    }); // initial state\n\n    setState(prev => prev = { ...initial_state\n    });\n    setValue(\"email\", \"\");\n    setValue(\"name\", \"\");\n    setValue(\"newemail\", \"\");\n    setValue(\"pw\", \"\");\n  };\n  /* const handleExit = () =>{\r\n    navigate(\"/\")\r\n  } */\n\n\n  const createEmail = ({\n    email,\n    pw\n  }) => {\n    try {\n      App.auth().createUserWithEmailAndPassword(email, pw);\n      toast({\n        title: \"New Email created!\",\n        status: \"success\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    setEmployeeId(empid);\n    setHocId(empid);\n  }, [empid]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    minW: \"container.lg\",\n    minH: 900,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      pl: 3,\n      children: /*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          children: \"EMPLOYEE EMAIL CONVERSION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      py: 2,\n      children: /*#__PURE__*/_jsxDEV(Divider, {\n        borderWidth: 1,\n        borderColor: \"teal\",\n        py: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Center, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(handleOnSubmit),\n          children: [/*#__PURE__*/_jsxDEV(VStack, {\n            alignItems: \"flex-start\",\n            px: 5,\n            py: 5,\n            m: 5,\n            borderRadius: \"20\",\n            border: \"1px solid teal\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                name: \"name\",\n                fontSize: \"20\" //defaultValue={email}\n                ,\n                render: ({\n                  field: {\n                    onChange,\n                    value,\n                    ref\n                  }\n                }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: /*#__PURE__*/_jsxDEV(HStack, {\n                    w: \"100%\",\n                    py: 1,\n                    children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                      children: \"Employee Name\",\n                      minWidth: field_width,\n                      bgColor: \"gray.300\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      name: \"name\",\n                      value: value || \"\",\n                      width: \"full\",\n                      onChange: e => {\n                        onChange(e);\n                        handleEmail(e.target.value);\n                      },\n                      borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                      ,\n                      ref: ref //placeholder=\"category\"\n                      ,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"None\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 27\n                      }, this), employees && employees.map(rec => {\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: rec.name,\n                          children: rec.name\n                        }, rec.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 192,\n                          columnNumber: 33\n                        }, this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                name: \"email\",\n                fontSize: \"20\" //defaultValue={curremail}\n                ,\n                render: ({\n                  field: {\n                    onChange,\n                    value,\n                    ref\n                  }\n                }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: /*#__PURE__*/_jsxDEV(HStack, {\n                    w: \"100%\",\n                    py: 1,\n                    children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                      children: \"Current Email\",\n                      minWidth: field_width,\n                      bgColor: \"gray.300\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"email\",\n                      type: \"email\",\n                      value: value,\n                      fontSize: \"20\",\n                      onChange: e => {\n                        onChange(e);\n                      },\n                      bgColor: \"white\" //textTransform=\"capitalize\"\n                      ,\n                      ref: ref,\n                      placeholder: \"current email\",\n                      readOnly: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                name: \"newemail\",\n                fontSize: \"20\" //defaultValue={name}\n                ,\n                render: ({\n                  field: {\n                    onChange,\n                    value,\n                    ref\n                  }\n                }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: /*#__PURE__*/_jsxDEV(HStack, {\n                    w: \"100%\",\n                    py: 1,\n                    children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                      children: \"New Email\",\n                      minWidth: field_width,\n                      bgColor: \"gray.300\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"newemail\",\n                      type: \"email\",\n                      value: value,\n                      fontSize: \"20\",\n                      onChange: e => {\n                        onChange(e);\n                      },\n                      bgColor: \"white\",\n                      textTransform: \"lowercase\",\n                      ref: ref,\n                      isRequired: true,\n                      placeholder: \"new email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                name: \"pw\",\n                fontSize: \"20\" //defaultValue={name}\n                ,\n                render: ({\n                  field: {\n                    onChange,\n                    value,\n                    ref\n                  }\n                }) => /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: /*#__PURE__*/_jsxDEV(HStack, {\n                    w: \"100%\",\n                    py: 1,\n                    children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                      children: \"Login Email PW\",\n                      minWidth: field_width,\n                      bgColor: \"gray.300\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Input, {\n                      name: \"pw\" //type=\"password\"\n                      ,\n                      value: value,\n                      fontSize: \"20\",\n                      onChange: e => {\n                        onChange(e);\n                      },\n                      bgColor: \"white\",\n                      textTransform: \"lowercase\",\n                      ref: ref,\n                      isRequired: true,\n                      placeholder: \"new login email password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            align: \"center\",\n            justify: \"center\",\n            px: 5,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"solid\",\n              isFullWidth: true,\n              colorScheme: \"teal\",\n              isLoading: isSubmitting,\n              type: \"submit\",\n              borderRadius: 10,\n              children: \"Convert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n        onClose: onAlertClose,\n        onConfirm: handleConvertConfirm,\n        isOpen: isAlertOpen,\n        title: \"Email Conversion\",\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          children: \"Are you sure you want to proceed ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\nexport default EmailConversion;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/ConvertEmpEmail.js"],"names":["React","useState","useEffect","Box","Button","Center","Container","Divider","FormControl","Heading","Input","InputLeftAddon","InputGroup","Select","HStack","VStack","useDisclosure","useCustomToast","useNavigate","AlertDialogBox","Controller","useForm","useEmployees","useUpdateEmployees","useHoc","useUpdateHoc","App","initial_state","name","email","newemail","pw","EmailConversion","navigate","toast","field_width","state","setState","empid","setEmpId","employees","setEmployeeId","updateEmployees","hoc","setHocId","updateHoc","handleSubmit","control","setValue","getValues","formState","isSubmitting","defaultValues","isOpen","isAlertOpen","onOpen","onAlertOpen","onClose","onAlertClose","handleEmail","value","data","filter","r","console","log","prev","id","handleOnSubmit","isexit","length","title","status","handleConvertConfirm","newpw","empdata","Calculation","fields","updEmpdata","createEmail","forEach","rec","updrec","auth","createUserWithEmailAndPassword","error","field","onChange","ref","e","target","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  //AspectRatio,\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Container,\r\n  Divider,\r\n  FormControl,\r\n  Heading,\r\n  //Image,\r\n  Input,\r\n  InputLeftAddon,\r\n  InputGroup,\r\n  Select,\r\n  //Stack,\r\n  HStack,\r\n  VStack,\r\n  //Wrap,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\n//import * as emailjs from \"emailjs-com\";\r\n//import { useRecoilState } from \"recoil\";\r\n//import { loginLevelState } from \"./data/atomdata\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\nimport { useHoc } from \"./hoc/useHoc\";\r\nimport { useUpdateHoc } from \"./hoc/useUpdateHoc\";\r\nimport App from \"../utils/firebase\";\r\n\r\nconst initial_state = {\r\n  name: \"\",\r\n  email: \"\",\r\n  newemail: \"\",\r\n  pw: \"\",\r\n};\r\n\r\nconst EmailConversion = () => {\r\n  const navigate = useNavigate();\r\n  const toast = useCustomToast();\r\n  const field_width = \"40\";\r\n  const [state, setState] = useState(initial_state);\r\n  const [empid, setEmpId] = useState(\"\");\r\n  const { employees, setEmployeeId } = useEmployees();\r\n  const updateEmployees = useUpdateEmployees();\r\n  const { hoc, setHocId } = useHoc();\r\n  const updateHoc = useUpdateHoc();\r\n\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    //register,\r\n    //reset,\r\n    setValue,\r\n    getValues,\r\n    formState: { isSubmitting },\r\n  } = useForm({ defaultValues: state });\r\n\r\n  const {\r\n    isOpen: isAlertOpen,\r\n    onOpen: onAlertOpen,\r\n    onClose: onAlertClose,\r\n  } = useDisclosure();\r\n\r\n  const handleEmail = (value) => {\r\n    const data = employees.filter((r) => r.name === value);\r\n    console.log(\"emp\", data);\r\n    setEmpId((prev) => (prev = data[0].id));\r\n    setValue(\"email\", data[0].email);\r\n  };\r\n\r\n  const handleOnSubmit = () => {\r\n    const newemail = getValues(\"newemail\");\r\n    const isexit = employees.filter((r) => r.email === newemail);\r\n    if (isexit.length > 0) {\r\n      toast({\r\n        title: `${newemail} is Existed!`,\r\n        status: \"warning\",\r\n      });\r\n    } else {\r\n      onAlertOpen();\r\n    }\r\n  };\r\n\r\n  const handleConvertConfirm = () => {\r\n    const newemail = getValues(\"newemail\");\r\n    const newpw = getValues(\"pw\");\r\n    const empdata = employees.filter((r) => r.id === empid);\r\n    const { Calculation, ...fields } = empdata[0];\r\n    const updEmpdata = { ...fields, email: newemail };\r\n    //create firebase email\r\n    createEmail({ email: newemail, pw: newpw });\r\n    //update emp record\r\n    //console.log(\"updemp\", updEmpdata)\r\n    updateEmployees({ id: empid, ...updEmpdata });\r\n    //update hoc\r\n    hoc &&\r\n      hoc\r\n        .filter((r) => r.empid === empid)\r\n        .forEach((rec) => {\r\n          const updrec = { ...rec, email: newemail };\r\n          updateHoc({ id: rec.id, ...updrec });\r\n        });\r\n    // initial state\r\n    setState((prev) => (prev = { ...initial_state }));\r\n    setValue(\"email\", \"\");\r\n    setValue(\"name\", \"\");\r\n    setValue(\"newemail\", \"\");\r\n    setValue(\"pw\", \"\");\r\n  };\r\n\r\n  /* const handleExit = () =>{\r\n    navigate(\"/\")\r\n  } */\r\n\r\n  const createEmail = ({ email, pw }) => {\r\n    try {\r\n      App.auth().createUserWithEmailAndPassword(email, pw);\r\n      toast({\r\n        title: \"New Email created!\",\r\n        status: \"success\",\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEmployeeId(empid);\r\n    setHocId(empid);\r\n  }, [empid]);\r\n\r\n  return (\r\n    <Container minW=\"container.lg\" minH={900}>\r\n      <Box pl={3}>\r\n        <Center>\r\n          <Heading size=\"md\">EMPLOYEE EMAIL CONVERSION</Heading>\r\n        </Center>\r\n      </Box>\r\n      <Box py={2}>\r\n        <Divider borderWidth={1} borderColor=\"teal\" py={0} />\r\n      </Box>\r\n      <Center>\r\n        <Box>\r\n          <form onSubmit={handleSubmit(handleOnSubmit)}>\r\n            <VStack\r\n              alignItems=\"flex-start\"\r\n              px={5}\r\n              py={5}\r\n              m={5}\r\n              borderRadius=\"20\"\r\n              border=\"1px solid teal\"\r\n            >\r\n              <FormControl>\r\n                <Controller\r\n                  control={control}\r\n                  name=\"name\"\r\n                  fontSize=\"20\"\r\n                  //defaultValue={email}\r\n\r\n                  render={({ field: { onChange, value, ref } }) => (\r\n                    <InputGroup>\r\n                      <HStack w=\"100%\" py={1}>\r\n                        <InputLeftAddon\r\n                          children=\"Employee Name\"\r\n                          minWidth={field_width}\r\n                          bgColor=\"gray.300\"\r\n                        />\r\n                        <Select\r\n                          name=\"name\"\r\n                          value={value || \"\"}\r\n                          width=\"full\"\r\n                          onChange={(e) => {\r\n                            onChange(e);\r\n                            handleEmail(e.target.value);\r\n                          }}\r\n                          borderColor=\"gray.400\"\r\n                          //textTransform=\"capitalize\"\r\n                          ref={ref}\r\n                          //placeholder=\"category\"\r\n                        >\r\n                          <option value=\"\">None</option>\r\n\r\n                          {employees &&\r\n                            employees.map((rec) => {\r\n                              return (\r\n                                <option key={rec.id} value={rec.name}>\r\n                                  {rec.name}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </HStack>\r\n                    </InputGroup>\r\n                  )}\r\n                />\r\n              </FormControl>\r\n              <Divider />\r\n              <FormControl>\r\n                <Controller\r\n                  control={control}\r\n                  name=\"email\"\r\n                  fontSize=\"20\"\r\n                  //defaultValue={curremail}\r\n                  render={({ field: { onChange, value, ref } }) => (\r\n                    <InputGroup>\r\n                      <HStack w=\"100%\" py={1}>\r\n                        <InputLeftAddon\r\n                          children=\"Current Email\"\r\n                          minWidth={field_width}\r\n                          bgColor=\"gray.300\"\r\n                        />\r\n                        <Input\r\n                          name=\"email\"\r\n                          type=\"email\"\r\n                          value={value}\r\n                          fontSize=\"20\"\r\n                          onChange={(e) => {\r\n                            onChange(e);\r\n                          }}\r\n                          bgColor=\"white\"\r\n                          //textTransform=\"capitalize\"\r\n                          ref={ref}\r\n                          placeholder=\"current email\"\r\n                          readOnly\r\n                        />\r\n                      </HStack>\r\n                    </InputGroup>\r\n                  )}\r\n                />\r\n              </FormControl>\r\n              <Divider />\r\n              <FormControl>\r\n                <Controller\r\n                  control={control}\r\n                  name=\"newemail\"\r\n                  fontSize=\"20\"\r\n                  //defaultValue={name}\r\n                  render={({ field: { onChange, value, ref } }) => (\r\n                    <InputGroup>\r\n                      <HStack w=\"100%\" py={1}>\r\n                        <InputLeftAddon\r\n                          children=\"New Email\"\r\n                          minWidth={field_width}\r\n                          bgColor=\"gray.300\"\r\n                        />\r\n                        <Input\r\n                          name=\"newemail\"\r\n                          type=\"email\"\r\n                          value={value}\r\n                          fontSize=\"20\"\r\n                          onChange={(e) => {\r\n                            onChange(e);\r\n                          }}\r\n                          bgColor=\"white\"\r\n                          textTransform=\"lowercase\"\r\n                          ref={ref}\r\n                          isRequired\r\n                          placeholder=\"new email\"\r\n                        />\r\n                      </HStack>\r\n                    </InputGroup>\r\n                  )}\r\n                />\r\n              </FormControl>\r\n              <Divider />\r\n              <FormControl>\r\n                <Controller\r\n                  control={control}\r\n                  name=\"pw\"\r\n                  fontSize=\"20\"\r\n                  //defaultValue={name}\r\n                  render={({ field: { onChange, value, ref } }) => (\r\n                    <InputGroup>\r\n                      <HStack w=\"100%\" py={1}>\r\n                        <InputLeftAddon\r\n                          children=\"Login Email PW\"\r\n                          minWidth={field_width}\r\n                          bgColor=\"gray.300\"\r\n                        />\r\n                        <Input\r\n                          name=\"pw\"\r\n                          //type=\"password\"\r\n                          value={value}\r\n                          fontSize=\"20\"\r\n                          onChange={(e) => {\r\n                            onChange(e);\r\n                          }}\r\n                          bgColor=\"white\"\r\n                          textTransform=\"lowercase\"\r\n                          ref={ref}\r\n                          isRequired\r\n                          placeholder=\"new login email password\"\r\n                        />\r\n                      </HStack>\r\n                    </InputGroup>\r\n                  )}\r\n                />\r\n              </FormControl>\r\n            </VStack>\r\n            <HStack align=\"center\" justify=\"center\" px={5}>\r\n              <Button\r\n                variant=\"solid\"\r\n                isFullWidth\r\n                colorScheme=\"teal\"\r\n                isLoading={isSubmitting}\r\n                type=\"submit\"\r\n                borderRadius={10}\r\n              >\r\n                Convert\r\n              </Button>\r\n            </HStack>\r\n          </form>\r\n        </Box>\r\n        <AlertDialogBox\r\n          onClose={onAlertClose}\r\n          onConfirm={handleConvertConfirm}\r\n          isOpen={isAlertOpen}\r\n          title=\"Email Conversion\"\r\n        >\r\n          <Heading size=\"md\">Are you sure you want to proceed ?</Heading>\r\n        </AlertDialogBox>\r\n      </Center>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EmailConversion;\r\n"]},"metadata":{},"sourceType":"module"}