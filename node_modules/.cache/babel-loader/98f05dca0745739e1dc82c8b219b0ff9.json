{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\ConvertEmpEmail.js\";\nimport React, { useState } from \"react\";\n/* import {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n  MenuItem,\r\n} from \"@material-ui/core\"; */\n\nimport { AspectRatio, Box, Button, ButtonGroup, Center, Checkbox, Container, Divider, Flex, FormControl, FormLabel, FormErrorMessage, FormHelperText, Grid, GridItem, Heading, HStack, IconButton, Image, Input, InputGroup, InputLeftAddon, InputLeftElement, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Radio, RadioGroup, Select, SimpleGrid, Stack, StackDivider, Text, Tabs, TabList, TabPanels, Tab, TabPanel, VStack, Wrap, WrapItem, useRadio, useRadioGroup, useDisclosure, useColorMode, useColorModeValue, useBreakpointValue } from \"@chakra-ui/react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_state = {\n  name: \"\",\n  email: \"\",\n  newemail: \"\",\n  loginpw: \"\"\n};\n\nconst ConvertEmpEmail = () => {\n  //const classes = useStyles();\n  //const label_width = \"150\";\n  const field_width = \"180\";\n  const field_gap = \"3\"; //const toast = useCustomToast();\n\n  const {\n    employees\n  } = useEmployees();\n  const updateEmployee = useUpdateEmployees();\n  const [state, setState] = useState(initial_state);\n  const [empdata, setEmpData] = useState({});\n  const [isExit, setIsExit] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false); //const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n\n  const {\n    handleSubmit,\n    control,\n    setValue\n  } = useForm({\n    defaultValues: { ...initial_state\n    }\n  }); //const initialValues = Object.values(initial_state).join(\"\");\n  //const {\n  //editEmployeeID,\n  //employees_loading,\n  //deleteEmployee,\n  //loadEmployees,\n  //setEditEmployeeID,\n  //setIsEditingOn,\n  //setIsEditingOff,\n  //resetSingleEmployee,\n  //resetEmployees,\n  //getSingleEmployee,\n  //} = useEmployeesContext();\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleOnConfirm = () => {\n    console.log(\"confirm\", empdata); //const { id, period, empid } = deletestate;\n    //delete allows detls\n    //console.log(\"allowsdetls\", dailyallowsdetls);\n    //dailyallowsdetls\n    //.filter((f) => f.empid === empid)\n    //.forEach((rec) => {\n    // if (rec.period === period && rec.empid === empid) {\n    //console.log(\"del id\", rec.id);\n    //  deleteDailyAllowsDetls(rec.id);\n    // }\n    //});\n    //delete daily allows\n    //deleteDailyAllows(id);\n    // toast({\n    //   title: `Site Allowances has been successfully deleted!`,\n    //   status: \"warning\",\n    // });\n  };\n\n  const handleSearchEmail = data => {\n    console.log(\"search data\", data);\n    const currentemail = employees.filter(r => r.name === data).map(rec => rec.email);\n    console.log(\"searchemail\", currentemail[0]);\n    setValue(\"email\", currentemail[0]);\n  };\n\n  const onSubmit = data => {\n    setEmpData(prev => prev = data);\n    handleAlertOpen();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      minW: \"3xl\",\n      h: {\n        base: \"auto\",\n        md: \"auto\"\n      },\n      py: [0, 0, 0],\n      direction: {\n        base: \"column-reverse\",\n        md: \"row\"\n      },\n      overflowY: \"scroll\",\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        w: {\n          base: \"auto\",\n          md: \"full\"\n        },\n        h: {\n          base: \"auto\",\n          md: \"full\"\n        },\n        p: \"2\",\n        spacing: \"10\" //alignItems=\"flex-start\"\n        ,\n        children: [/*#__PURE__*/_jsxDEV(VStack, {\n          pt: 2,\n          spacing: \"3\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            size: \"lg\",\n            children: \"EMPLOYEE EMAIL CONVERSION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          border: \"1px solid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          border: \"1px solid\",\n          borderRadius: 20,\n          p: 5,\n          w: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"name\",\n                control: control,\n                defaultValue: state.name,\n                render: ({\n                  field: {\n                    onChange,\n                    value,\n                    ref\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(InputGroup, {\n                    children: /*#__PURE__*/_jsxDEV(HStack, {\n                      w: \"100%\",\n                      py: 1,\n                      children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                        children: \"Employee Name\",\n                        minWidth: field_width\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"name\",\n                        value: value,\n                        width: \"100%\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"employee name\",\n                        minWidth: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this);\n                },\n                rules: {\n                  required: \"Name required\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"email\",\n                control: control,\n                defaultValue: state.email,\n                render: ({\n                  field: {\n                    onChange,\n                    value,\n                    ref\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(InputGroup, {\n                    children: /*#__PURE__*/_jsxDEV(HStack, {\n                      w: \"100%\",\n                      py: 1,\n                      children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                        children: \"Current Email\",\n                        minWidth: field_width\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"email\",\n                        value: value,\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"current email\",\n                        minWidth: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 23\n                  }, this);\n                },\n                rules: {\n                  required: \"Email is required\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"newemail\",\n                control: control,\n                defaultValue: state.newemail,\n                render: ({\n                  field: {\n                    onChange,\n                    value,\n                    ref\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(InputGroup, {\n                    children: /*#__PURE__*/_jsxDEV(HStack, {\n                      w: \"100%\",\n                      py: 1,\n                      children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                        children: \"New Email\",\n                        minWidth: field_width\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"newemail\",\n                        value: value,\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"new email\",\n                        minWidth: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this);\n                },\n                rules: {\n                  required: \"Email is required\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"loginpw\",\n                control: control,\n                defaultValue: state.loginpw,\n                render: ({\n                  field: {\n                    onChange,\n                    value,\n                    ref\n                  },\n                  fieldState: {\n                    error\n                  }\n                }) => {\n                  return /*#__PURE__*/_jsxDEV(InputGroup, {\n                    children: /*#__PURE__*/_jsxDEV(HStack, {\n                      w: \"100%\",\n                      py: 1,\n                      children: [/*#__PURE__*/_jsxDEV(InputLeftAddon, {\n                        children: \"Login Email PW\",\n                        minWidth: field_width\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 288,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        name: \"loginpw\",\n                        value: value,\n                        width: \"full\",\n                        onChange: onChange,\n                        borderColor: \"gray.400\" //textTransform=\"capitalize\"\n                        ,\n                        ref: ref,\n                        placeholder: \"login email pw\",\n                        minWidth: \"100\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 23\n                  }, this);\n                },\n                rules: {\n                  required: \"Password is required\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Center, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  mt: 4,\n                  ml: 4,\n                  colorScheme: \"teal\" //isLoading={isSubmitting}\n                  ,\n                  type: \"submit\",\n                  children: \"Convert\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), isExit && /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Heading, {\n                size: \"md\",\n                pl: 2,\n                children: \"Warning! This email already existed!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n              onClose: handleAlertClose,\n              onConfirm: handleOnConfirm,\n              isOpen: isAlertOpen,\n              title: \"Convert Email\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Are you sure you want to convert ?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default ConvertEmpEmail;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/ConvertEmpEmail.js"],"names":["React","useState","AspectRatio","Box","Button","ButtonGroup","Center","Checkbox","Container","Divider","Flex","FormControl","FormLabel","FormErrorMessage","FormHelperText","Grid","GridItem","Heading","HStack","IconButton","Image","Input","InputGroup","InputLeftAddon","InputLeftElement","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Radio","RadioGroup","Select","SimpleGrid","Stack","StackDivider","Text","Tabs","TabList","TabPanels","Tab","TabPanel","VStack","Wrap","WrapItem","useRadio","useRadioGroup","useDisclosure","useColorMode","useColorModeValue","useBreakpointValue","Controller","useForm","makeStyles","AlertDialogBox","useEmployees","useUpdateEmployees","initial_state","name","email","newemail","loginpw","ConvertEmpEmail","field_width","field_gap","employees","updateEmployee","state","setState","empdata","setEmpData","isExit","setIsExit","isAlertOpen","setIsAlertOpen","handleSubmit","control","setValue","defaultValues","handleAlertOpen","handleAlertClose","handleOnConfirm","console","log","handleSearchEmail","data","currentemail","filter","r","map","rec","onSubmit","prev","base","md","field","onChange","value","ref","fieldState","error","required","useStyles","theme","button","margin","spacing","leftIcon","marginRight","rightIcon","marginLeft","iconSmall","fontSize","root","padding","container","display","flexWrap","textField","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SACEC,WADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,MALF,EAMEC,QANF,EAOEC,SAPF,EAQEC,OARF,EASEC,IATF,EAUEC,WAVF,EAWEC,SAXF,EAYEC,gBAZF,EAaEC,cAbF,EAcEC,IAdF,EAeEC,QAfF,EAgBEC,OAhBF,EAiBEC,MAjBF,EAkBEC,UAlBF,EAmBEC,KAnBF,EAoBEC,KApBF,EAqBEC,UArBF,EAsBEC,cAtBF,EAuBEC,gBAvBF,EAwBEC,KAxBF,EAyBEC,YAzBF,EA0BEC,YA1BF,EA2BEC,WA3BF,EA4BEC,WA5BF,EA6BEC,SA7BF,EA8BEC,gBA9BF,EA+BEC,KA/BF,EAgCEC,UAhCF,EAiCEC,MAjCF,EAkCEC,UAlCF,EAmCEC,KAnCF,EAoCEC,YApCF,EAqCEC,IArCF,EAsCEC,IAtCF,EAuCEC,OAvCF,EAwCEC,SAxCF,EAyCEC,GAzCF,EA0CEC,QA1CF,EA2CEC,MA3CF,EA4CEC,IA5CF,EA6CEC,QA7CF,EA8CEC,QA9CF,EA+CEC,aA/CF,EAgDEC,aAhDF,EAiDEC,YAjDF,EAkDEC,iBAlDF,EAmDEC,kBAnDF,QAoDO,kBApDP;AAqDA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,iBAApC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,QAAQ,EAAE,EAHU;AAIpBC,EAAAA,OAAO,EAAE;AAJW,CAAtB;;AAOA,MAAMC,eAAe,GAAG,MAAM;AAC5B;AACA;AACA,QAAMC,WAAW,GAAG,KAApB;AACA,QAAMC,SAAS,GAAG,GAAlB,CAJ4B,CAK5B;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBV,YAAY,EAAlC;AACA,QAAMW,cAAc,GAAGV,kBAAkB,EAAzC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBrE,QAAQ,CAAC0D,aAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBvE,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACwE,MAAD,EAASC,SAAT,IAAsBzE,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAC0E,WAAD,EAAcC,cAAd,IAAgC3E,QAAQ,CAAC,KAAD,CAA9C,CAX4B,CAY5B;;AACA,QAAM;AAAE4E,IAAAA,YAAF;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,MAAsCzB,OAAO,CAAC;AAClD0B,IAAAA,aAAa,EAAE,EAAE,GAAGrB;AAAL;AADmC,GAAD,CAAnD,CAb4B,CAgB5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMsB,eAAe,GAAG,MAAM;AAC5BL,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAIA,QAAMM,gBAAgB,GAAG,MAAM;AAC7BN,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAIA,QAAMO,eAAe,GAAG,MAAM;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBd,OAAvB,EAD4B,CAE5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GApBD;;AAsBA,QAAMe,iBAAiB,GAAIC,IAAD,IAAU;AAClCH,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BE,IAA3B;AACA,UAAMC,YAAY,GAAGrB,SAAS,CAC3BsB,MADkB,CACVC,CAAD,IAAOA,CAAC,CAAC9B,IAAF,KAAW2B,IADP,EAElBI,GAFkB,CAEbC,GAAD,IAASA,GAAG,CAAC/B,KAFC,CAArB;AAGAuB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BG,YAAY,CAAC,CAAD,CAAvC;AACAT,IAAAA,QAAQ,CAAC,OAAD,EAAUS,YAAY,CAAC,CAAD,CAAtB,CAAR;AACD,GAPD;;AASA,QAAMK,QAAQ,GAAIN,IAAD,IAAU;AACzBf,IAAAA,UAAU,CAAEsB,IAAD,IAAWA,IAAI,GAAGP,IAAnB,CAAV;AACAN,IAAAA,eAAe;AAChB,GAHD;;AAKA,sBACE;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,CAAC,EAAE;AAAEc,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,EAAE,EAAE;AAApB,OAFL;AAGE,MAAA,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHN;AAIE,MAAA,SAAS,EAAE;AAAED,QAAAA,IAAI,EAAE,gBAAR;AAA0BC,QAAAA,EAAE,EAAE;AAA9B,OAJb;AAKE,MAAA,SAAS,EAAC,QALZ;AAAA,6BAOE,QAAC,MAAD;AACE,QAAA,CAAC,EAAE;AAAED,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,EAAE,EAAE;AAApB,SADL;AAEE,QAAA,CAAC,EAAE;AAAED,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,EAAE,EAAE;AAApB,SAFL;AAGE,QAAA,CAAC,EAAC,GAHJ;AAIE,QAAA,OAAO,EAAC,IAJV,CAKE;AALF;AAAA,gCAOE,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAE,CAAZ;AAAe,UAAA,OAAO,EAAC,GAAvB;AAA2B,UAAA,UAAU,EAAC,QAAtC;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAWE,QAAC,OAAD;AAAS,UAAA,MAAM,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE,QAAC,GAAD;AAAK,UAAA,MAAM,EAAC,WAAZ;AAAwB,UAAA,YAAY,EAAE,EAAtC;AAA0C,UAAA,CAAC,EAAE,CAA7C;AAAgD,UAAA,CAAC,EAAC,MAAlD;AAAA,kCACE;AAAM,YAAA,QAAQ,EAAEnB,YAAY,CAACgB,QAAD,CAA5B;AAAA,oCACE;AAAA,qCACE,QAAC,UAAD;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,OAAO,EAAEf,OAFX;AAGE,gBAAA,YAAY,EAAET,KAAK,CAACT,IAHtB;AAIE,gBAAA,MAAM,EAAE,CAAC;AACPqC,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,QAAF;AAAYC,oBAAAA,KAAZ;AAAmBC,oBAAAA;AAAnB,mBADA;AAEPC,kBAAAA,UAAU,EAAE;AAAEC,oBAAAA;AAAF;AAFL,iBAAD,KAGF;AACJ,sCACE,QAAC,UAAD;AAAA,2CACE,QAAC,MAAD;AAAQ,sBAAA,CAAC,EAAC,MAAV;AAAiB,sBAAA,EAAE,EAAE,CAArB;AAAA,8CACE,QAAC,cAAD;AACE,wBAAA,QAAQ,EAAC,eADX;AAEE,wBAAA,QAAQ,EAAErC;AAFZ;AAAA;AAAA;AAAA;AAAA,8BADF,eAKE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,MADP;AAEE,wBAAA,KAAK,EAAEkC,KAFT;AAGE,wBAAA,KAAK,EAAC,MAHR;AAIE,wBAAA,QAAQ,EAAED,QAJZ;AAKE,wBAAA,WAAW,EAAC,UALd,CAME;AANF;AAOE,wBAAA,GAAG,EAAEE,GAPP;AAQE,wBAAA,WAAW,EAAC,eARd;AASE,wBAAA,QAAQ,EAAC;AATX;AAAA;AAAA;AAAA;AAAA,8BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF;AAqBD,iBA7BH;AA8BE,gBAAA,KAAK,EAAE;AAAEG,kBAAAA,QAAQ,EAAE;AAAZ;AA9BT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAmCE;AAAA,qCACE,QAAC,UAAD;AACE,gBAAA,IAAI,EAAC,OADP;AAEE,gBAAA,OAAO,EAAEzB,OAFX;AAGE,gBAAA,YAAY,EAAET,KAAK,CAACR,KAHtB;AAIE,gBAAA,MAAM,EAAE,CAAC;AACPoC,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,QAAF;AAAYC,oBAAAA,KAAZ;AAAmBC,oBAAAA;AAAnB,mBADA;AAEPC,kBAAAA,UAAU,EAAE;AAAEC,oBAAAA;AAAF;AAFL,iBAAD,KAGF;AACJ,sCACE,QAAC,UAAD;AAAA,2CACE,QAAC,MAAD;AAAQ,sBAAA,CAAC,EAAC,MAAV;AAAiB,sBAAA,EAAE,EAAE,CAArB;AAAA,8CACE,QAAC,cAAD;AACE,wBAAA,QAAQ,EAAC,eADX;AAEE,wBAAA,QAAQ,EAAErC;AAFZ;AAAA;AAAA;AAAA;AAAA,8BADF,eAKE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,OADP;AAEE,wBAAA,KAAK,EAAEkC,KAFT;AAGE,wBAAA,KAAK,EAAC,MAHR;AAIE,wBAAA,QAAQ,EAAED,QAJZ;AAKE,wBAAA,WAAW,EAAC,UALd,CAME;AANF;AAOE,wBAAA,GAAG,EAAEE,GAPP;AAQE,wBAAA,WAAW,EAAC,eARd;AASE,wBAAA,QAAQ,EAAC;AATX;AAAA;AAAA;AAAA;AAAA,8BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF;AAqBD,iBA7BH;AA8BE,gBAAA,KAAK,EAAE;AAAEG,kBAAAA,QAAQ,EAAE;AAAZ;AA9BT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAnCF,eAqEE;AAAA,qCACE,QAAC,UAAD;AACE,gBAAA,IAAI,EAAC,UADP;AAEE,gBAAA,OAAO,EAAEzB,OAFX;AAGE,gBAAA,YAAY,EAAET,KAAK,CAACP,QAHtB;AAIE,gBAAA,MAAM,EAAE,CAAC;AACPmC,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,QAAF;AAAYC,oBAAAA,KAAZ;AAAmBC,oBAAAA;AAAnB,mBADA;AAEPC,kBAAAA,UAAU,EAAE;AAAEC,oBAAAA;AAAF;AAFL,iBAAD,KAGF;AACJ,sCACE,QAAC,UAAD;AAAA,2CACE,QAAC,MAAD;AAAQ,sBAAA,CAAC,EAAC,MAAV;AAAiB,sBAAA,EAAE,EAAE,CAArB;AAAA,8CACE,QAAC,cAAD;AACE,wBAAA,QAAQ,EAAC,WADX;AAEE,wBAAA,QAAQ,EAAErC;AAFZ;AAAA;AAAA;AAAA;AAAA,8BADF,eAKE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,UADP;AAEE,wBAAA,KAAK,EAAEkC,KAFT;AAGE,wBAAA,KAAK,EAAC,MAHR;AAIE,wBAAA,QAAQ,EAAED,QAJZ;AAKE,wBAAA,WAAW,EAAC,UALd,CAME;AANF;AAOE,wBAAA,GAAG,EAAEE,GAPP;AAQE,wBAAA,WAAW,EAAC,WARd;AASE,wBAAA,QAAQ,EAAC;AATX;AAAA;AAAA;AAAA;AAAA,8BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF;AAqBD,iBA7BH;AA8BE,gBAAA,KAAK,EAAE;AAAEG,kBAAAA,QAAQ,EAAE;AAAZ;AA9BT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBArEF,eAuGE;AAAA,qCACE,QAAC,UAAD;AACE,gBAAA,IAAI,EAAC,SADP;AAEE,gBAAA,OAAO,EAAEzB,OAFX;AAGE,gBAAA,YAAY,EAAET,KAAK,CAACN,OAHtB;AAIE,gBAAA,MAAM,EAAE,CAAC;AACPkC,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,QAAF;AAAYC,oBAAAA,KAAZ;AAAmBC,oBAAAA;AAAnB,mBADA;AAEPC,kBAAAA,UAAU,EAAE;AAAEC,oBAAAA;AAAF;AAFL,iBAAD,KAGF;AACJ,sCACE,QAAC,UAAD;AAAA,2CACE,QAAC,MAAD;AAAQ,sBAAA,CAAC,EAAC,MAAV;AAAiB,sBAAA,EAAE,EAAE,CAArB;AAAA,8CACE,QAAC,cAAD;AACE,wBAAA,QAAQ,EAAC,gBADX;AAEE,wBAAA,QAAQ,EAAErC;AAFZ;AAAA;AAAA;AAAA;AAAA,8BADF,eAKE,QAAC,KAAD;AACE,wBAAA,IAAI,EAAC,SADP;AAEE,wBAAA,KAAK,EAAEkC,KAFT;AAGE,wBAAA,KAAK,EAAC,MAHR;AAIE,wBAAA,QAAQ,EAAED,QAJZ;AAKE,wBAAA,WAAW,EAAC,UALd,CAME;AANF;AAOE,wBAAA,GAAG,EAAEE,GAPP;AAQE,wBAAA,WAAW,EAAC,gBARd;AASE,wBAAA,QAAQ,EAAC;AATX;AAAA;AAAA;AAAA;AAAA,8BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF;AAqBD,iBA7BH;AA8BE,gBAAA,KAAK,EAAE;AAAEG,kBAAAA,QAAQ,EAAE;AAAZ;AA9BT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAvGF,eAqJE,QAAC,GAAD;AAAA,qCACE,QAAC,MAAD;AAAA,uCACE,QAAC,MAAD;AACE,kBAAA,EAAE,EAAE,CADN;AAEE,kBAAA,EAAE,EAAE,CAFN;AAGE,kBAAA,WAAW,EAAC,MAHd,CAIE;AAJF;AAKE,kBAAA,IAAI,EAAC,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBArJF,EAkKG9B,MAAM,iBACL,QAAC,GAAD;AAAA,qCACE,QAAC,OAAD;AAAS,gBAAA,IAAI,EAAC,IAAd;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAnKJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA2KE;AAAA,mCACE,QAAC,cAAD;AACE,cAAA,OAAO,EAAES,gBADX;AAEE,cAAA,SAAS,EAAEC,eAFb;AAGE,cAAA,MAAM,EAAER,WAHV;AAIE,cAAA,KAAK,EAAC,eAJR;AAAA,qCAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA3KF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+MD,CA1RD;;AA4RA,MAAM6B,SAAS,GAAGjD,UAAU,CAAEkD,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADF,GAD+B;AAIvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd;AADL,GAJ6B;AAOvCG,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAEP,KAAK,CAACG,OAAN,CAAc,CAAd;AADH,GAP4B;AAUvCK,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE;AADD,GAV4B;AAavCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAEX,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADL,GAbiC;AAgBvCS,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,QAAQ,EAAE;AAFD,GAhB4B;AAoBvCC,EAAAA,SAAS,EAAE;AACTR,IAAAA,UAAU,EAAEP,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAETE,IAAAA,WAAW,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ;AAGTa,IAAAA,KAAK,EAAE;AAHE;AApB4B,CAAZ,CAAD,CAA5B;AA2BA,eAAezD,eAAf","sourcesContent":["import React, { useState } from \"react\";\r\n/* import {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n  MenuItem,\r\n} from \"@material-ui/core\"; */\r\nimport {\r\n  AspectRatio,\r\n  Box,\r\n  Button,\r\n  ButtonGroup,\r\n  Center,\r\n  Checkbox,\r\n  Container,\r\n  Divider,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  FormErrorMessage,\r\n  FormHelperText,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  HStack,\r\n  IconButton,\r\n  Image,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftAddon,\r\n  InputLeftElement,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  SimpleGrid,\r\n  Stack,\r\n  StackDivider,\r\n  Text,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  VStack,\r\n  Wrap,\r\n  WrapItem,\r\n  useRadio,\r\n  useRadioGroup,\r\n  useDisclosure,\r\n  useColorMode,\r\n  useColorModeValue,\r\n  useBreakpointValue,\r\n} from \"@chakra-ui/react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\nconst initial_state = {\r\n  name: \"\",\r\n  email: \"\",\r\n  newemail: \"\",\r\n  loginpw: \"\",\r\n};\r\n\r\nconst ConvertEmpEmail = () => {\r\n  //const classes = useStyles();\r\n  //const label_width = \"150\";\r\n  const field_width = \"180\";\r\n  const field_gap = \"3\";\r\n  //const toast = useCustomToast();\r\n  const { employees } = useEmployees();\r\n  const updateEmployee = useUpdateEmployees();\r\n  const [state, setState] = useState(initial_state);\r\n  const [empdata, setEmpData] = useState({});\r\n  const [isExit, setIsExit] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  //const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { handleSubmit, control, setValue } = useForm({\r\n    defaultValues: { ...initial_state },\r\n  });\r\n  //const initialValues = Object.values(initial_state).join(\"\");\r\n\r\n  //const {\r\n  //editEmployeeID,\r\n  //employees_loading,\r\n  //deleteEmployee,\r\n  //loadEmployees,\r\n  //setEditEmployeeID,\r\n  //setIsEditingOn,\r\n  //setIsEditingOff,\r\n  //resetSingleEmployee,\r\n  //resetEmployees,\r\n  //getSingleEmployee,\r\n  //} = useEmployeesContext();\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnConfirm = () => {\r\n    console.log(\"confirm\", empdata);\r\n    //const { id, period, empid } = deletestate;\r\n\r\n    //delete allows detls\r\n    //console.log(\"allowsdetls\", dailyallowsdetls);\r\n    //dailyallowsdetls\r\n    //.filter((f) => f.empid === empid)\r\n    //.forEach((rec) => {\r\n    // if (rec.period === period && rec.empid === empid) {\r\n    //console.log(\"del id\", rec.id);\r\n    //  deleteDailyAllowsDetls(rec.id);\r\n    // }\r\n    //});\r\n    //delete daily allows\r\n    //deleteDailyAllows(id);\r\n    // toast({\r\n    //   title: `Site Allowances has been successfully deleted!`,\r\n    //   status: \"warning\",\r\n    // });\r\n  };\r\n\r\n  const handleSearchEmail = (data) => {\r\n    console.log(\"search data\", data);\r\n    const currentemail = employees\r\n      .filter((r) => r.name === data)\r\n      .map((rec) => rec.email);\r\n    console.log(\"searchemail\", currentemail[0]);\r\n    setValue(\"email\", currentemail[0]);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    setEmpData((prev) => (prev = data));\r\n    handleAlertOpen();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container\r\n        minW=\"3xl\"\r\n        h={{ base: \"auto\", md: \"auto\" }}\r\n        py={[0, 0, 0]}\r\n        direction={{ base: \"column-reverse\", md: \"row\" }}\r\n        overflowY=\"scroll\"\r\n      >\r\n        <VStack\r\n          w={{ base: \"auto\", md: \"full\" }}\r\n          h={{ base: \"auto\", md: \"full\" }}\r\n          p=\"2\"\r\n          spacing=\"10\"\r\n          //alignItems=\"flex-start\"\r\n        >\r\n          <VStack pt={2} spacing=\"3\" alignItems=\"center\">\r\n            <Heading size=\"lg\">EMPLOYEE EMAIL CONVERSION</Heading>\r\n          </VStack>\r\n\r\n          <Divider border=\"1px solid\" />\r\n          <Box border=\"1px solid\" borderRadius={20} p={5} w=\"100%\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div>\r\n                <Controller\r\n                  name=\"name\"\r\n                  control={control}\r\n                  defaultValue={state.name}\r\n                  render={({\r\n                    field: { onChange, value, ref },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <InputGroup>\r\n                        <HStack w=\"100%\" py={1}>\r\n                          <InputLeftAddon\r\n                            children=\"Employee Name\"\r\n                            minWidth={field_width}\r\n                          />\r\n                          <Input\r\n                            name=\"name\"\r\n                            value={value}\r\n                            width=\"100%\"\r\n                            onChange={onChange}\r\n                            borderColor=\"gray.400\"\r\n                            //textTransform=\"capitalize\"\r\n                            ref={ref}\r\n                            placeholder=\"employee name\"\r\n                            minWidth=\"100\"\r\n                          />\r\n                        </HStack>\r\n                      </InputGroup>\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Name required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"email\"\r\n                  control={control}\r\n                  defaultValue={state.email}\r\n                  render={({\r\n                    field: { onChange, value, ref },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <InputGroup>\r\n                        <HStack w=\"100%\" py={1}>\r\n                          <InputLeftAddon\r\n                            children=\"Current Email\"\r\n                            minWidth={field_width}\r\n                          />\r\n                          <Input\r\n                            name=\"email\"\r\n                            value={value}\r\n                            width=\"full\"\r\n                            onChange={onChange}\r\n                            borderColor=\"gray.400\"\r\n                            //textTransform=\"capitalize\"\r\n                            ref={ref}\r\n                            placeholder=\"current email\"\r\n                            minWidth=\"100\"\r\n                          />\r\n                        </HStack>\r\n                      </InputGroup>\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"newemail\"\r\n                  control={control}\r\n                  defaultValue={state.newemail}\r\n                  render={({\r\n                    field: { onChange, value, ref },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <InputGroup>\r\n                        <HStack w=\"100%\" py={1}>\r\n                          <InputLeftAddon\r\n                            children=\"New Email\"\r\n                            minWidth={field_width}\r\n                          />\r\n                          <Input\r\n                            name=\"newemail\"\r\n                            value={value}\r\n                            width=\"full\"\r\n                            onChange={onChange}\r\n                            borderColor=\"gray.400\"\r\n                            //textTransform=\"capitalize\"\r\n                            ref={ref}\r\n                            placeholder=\"new email\"\r\n                            minWidth=\"100\"\r\n                          />\r\n                        </HStack>\r\n                      </InputGroup>\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Email is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"loginpw\"\r\n                  control={control}\r\n                  defaultValue={state.loginpw}\r\n                  render={({\r\n                    field: { onChange, value, ref },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <InputGroup>\r\n                        <HStack w=\"100%\" py={1}>\r\n                          <InputLeftAddon\r\n                            children=\"Login Email PW\"\r\n                            minWidth={field_width}\r\n                          />\r\n                          <Input\r\n                            name=\"loginpw\"\r\n                            value={value}\r\n                            width=\"full\"\r\n                            onChange={onChange}\r\n                            borderColor=\"gray.400\"\r\n                            //textTransform=\"capitalize\"\r\n                            ref={ref}\r\n                            placeholder=\"login email pw\"\r\n                            minWidth=\"100\"\r\n                          />\r\n                        </HStack>\r\n                      </InputGroup>\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"Password is required\" }}\r\n                />\r\n              </div>\r\n\r\n              {/* <div>\r\n            <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={handleSubmit(onSubmit)}\r\n            >\r\n            Convert <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div> */}\r\n              <Box>\r\n                <Center>\r\n                  <Button\r\n                    mt={4}\r\n                    ml={4}\r\n                    colorScheme=\"teal\"\r\n                    //isLoading={isSubmitting}\r\n                    type=\"submit\"\r\n                  >\r\n                    Convert\r\n                  </Button>\r\n                </Center>\r\n              </Box>\r\n              {isExit && (\r\n                <Box>\r\n                  <Heading size=\"md\" pl={2}>\r\n                    Warning! This email already existed!\r\n                  </Heading>\r\n                </Box>\r\n              )}\r\n            </form>\r\n            <div>\r\n              <AlertDialogBox\r\n                onClose={handleAlertClose}\r\n                onConfirm={handleOnConfirm}\r\n                isOpen={isAlertOpen}\r\n                title=\"Convert Email\"\r\n              >\r\n                <h2>Are you sure you want to convert ?</h2>\r\n              </AlertDialogBox>\r\n            </div>\r\n          </Box>\r\n        </VStack>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default ConvertEmpEmail;\r\n"]},"metadata":{},"sourceType":"module"}