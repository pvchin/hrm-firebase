{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\TrainingsTableViewAdmin.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\"; //import clsx from \"clsx\";\n\nimport { Box, Grid, GridItem, Heading, IconButton, Spacer, Stack } from \"@chakra-ui/react\";\nimport { EditIcon, ViewIcon } from \"@chakra-ui/icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { differenceInDays } from \"date-fns\";\nimport { List } from \"@material-ui/core\"; //import { useRecoilState } from \"recoil\";\n//import { loginLevelState } from \"./data/atomdata\";\n\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useTrainings } from \"./trainings/useTrainings\";\nimport { useEmployees } from \"./employees/useEmployees\"; //const drawerWidth = 240;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TrainingsTableViewAdmin = () => {\n  const classes = useStyles();\n  const navigate = useNavigate(); //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const {\n    employees\n  } = useEmployees();\n  const {\n    trainings\n  } = useTrainings(); //const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n\n  const today = Date().toLocaleString();\n  const {\n    setEmployeeId\n  } = useEmployees();\n  const {\n    //editEmployeeID,\n    //employees_loading,\n    //deleteEmployee,\n    //loadEmployees,\n    setEditEmployeeID,\n    setIsEditingOn,\n    //setIsEditingOff,\n    resetSingleEmployee,\n    resetEmployees //getSingleEmployee,\n\n  } = useEmployeesContext(); // useEffect(() => {\n  //   setFilter(loginLevel.loginUserId);\n  // }, []);\n\n  const handleOnClick = id => {\n    console.log(\"id\", id);\n    resetSingleEmployee();\n    resetEmployees();\n    setEditEmployeeID(id);\n    setIsEditingOn();\n    setEmployeeId(id);\n    navigate(\"/singleemployee\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h4\",\n          size: \"md\",\n          children: \"Trainings Schedule Expiry Within 90 days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton // variant=\"outline\"\n        , {\n          size: \"md\",\n          \"aria-label\": \"Edit\",\n          icon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this),\n          onClick: () => navigate(\"/allemployees\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), trainings.filter(i => differenceInDays(new Date(i.expiry_date), new Date(today)) < 90 && differenceInDays(new Date(today), new Date(i.expiry_date)) < 0).map(row => {\n        const emp = employees.filter(r => r.id === row.empid && !r.hasresigned);\n\n        if (emp.length > 0) {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            templateColumns: \"repeat(13, 1fr)\",\n            gap: 3,\n            p: 1,\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 1,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                w: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  size: \"sm\",\n                  \"aria-label\": \"Edit\",\n                  icon: /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 31\n                  }, this),\n                  onClick: () => handleOnClick(row.empid)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 3,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                w: \"100%\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 3,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                w: \"100%\",\n                children: row.course\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 3,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                w: \"100%\",\n                children: row.institute\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n              colSpan: 3,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                w: \"100%\",\n                children: row.expiry_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this) // <ListItem key={row.id}>\n          //   <Grid item sm={3} align=\"center\">\n          //     <ListItemText>{row.name}</ListItemText>\n          //   </Grid>\n          //   <Grid item sm={3} align=\"center\">\n          //     <ListItemText>{row.institute}</ListItemText>\n          //   </Grid>\n          //   <Grid item sm={3} align=\"center\">\n          //     <ListItemText>{row.course}</ListItemText>\n          //   </Grid>\n          //   <Grid item sm={3} align=\"center\">\n          //     <ListItemText>{row.expiry_date}</ListItemText>\n          //   </Grid>\n          // </ListItem>\n          ;\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));\nexport default TrainingsTableViewAdmin;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/TrainingsTableViewAdmin.js"],"names":["React","makeStyles","Box","Grid","GridItem","Heading","IconButton","Spacer","Stack","EditIcon","ViewIcon","useNavigate","differenceInDays","List","useEmployeesContext","useTrainings","useEmployees","TrainingsTableViewAdmin","classes","useStyles","navigate","employees","trainings","today","Date","toLocaleString","setEmployeeId","setEditEmployeeID","setIsEditingOn","resetSingleEmployee","resetEmployees","handleOnClick","id","console","log","root","filter","i","expiry_date","map","row","emp","r","empid","hasresigned","length","name","course","institute","theme","padding"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  Grid,\r\n  GridItem,\r\n  Heading,\r\n  IconButton,\r\n  Spacer,\r\n  Stack,\r\n} from \"@chakra-ui/react\";\r\nimport { EditIcon, ViewIcon } from \"@chakra-ui/icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { differenceInDays } from \"date-fns\";\r\nimport { List } from \"@material-ui/core\";\r\n//import { useRecoilState } from \"recoil\";\r\n//import { loginLevelState } from \"./data/atomdata\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useTrainings } from \"./trainings/useTrainings\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\n\r\n//const drawerWidth = 240;\r\n\r\nconst TrainingsTableViewAdmin = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  const { employees } = useEmployees();\r\n  const { trainings } = useTrainings();\r\n  //const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const today = Date().toLocaleString();\r\n  const { setEmployeeId } = useEmployees();\r\n  const {\r\n    //editEmployeeID,\r\n    //employees_loading,\r\n    //deleteEmployee,\r\n    //loadEmployees,\r\n    setEditEmployeeID,\r\n    setIsEditingOn,\r\n    //setIsEditingOff,\r\n    resetSingleEmployee,\r\n    resetEmployees,\r\n    //getSingleEmployee,\r\n  } = useEmployeesContext();\r\n\r\n  // useEffect(() => {\r\n  //   setFilter(loginLevel.loginUserId);\r\n  // }, []);\r\n\r\n  const handleOnClick = (id) => {\r\n    console.log(\"id\", id)\r\n    resetSingleEmployee();\r\n    resetEmployees();\r\n    setEditEmployeeID(id);\r\n    setIsEditingOn();\r\n    setEmployeeId(id);\r\n\r\n    navigate(\"/singleemployee\");\r\n  };\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      <Grid container direction=\"row\">\r\n        <Stack direction=\"row\">\r\n          <Heading as=\"h4\" size=\"md\">\r\n            Trainings Schedule Expiry Within 90 days\r\n          </Heading>\r\n          <Spacer />\r\n          <IconButton\r\n            // variant=\"outline\"\r\n            size=\"md\"\r\n            aria-label=\"Edit\"\r\n            icon={<EditIcon />}\r\n            onClick={() => navigate(\"/allemployees\")}\r\n          />\r\n        </Stack>\r\n\r\n        {trainings\r\n          .filter(\r\n            (i) =>\r\n              differenceInDays(new Date(i.expiry_date), new Date(today)) < 90 &&\r\n              differenceInDays(new Date(today), new Date(i.expiry_date)) < 0\r\n          )\r\n          .map((row) => {\r\n            const emp = employees.filter(\r\n              (r) => r.id === row.empid && !r.hasresigned\r\n            );\r\n            if (emp.length > 0) {\r\n              return (\r\n                <Grid\r\n                  templateColumns=\"repeat(13, 1fr)\"\r\n                  gap={3}\r\n                  p={1}\r\n                  key={row.id}\r\n                >\r\n                  <GridItem colSpan={1}>\r\n                    <Box w=\"100%\">\r\n                      <IconButton\r\n                        size=\"sm\"\r\n                        aria-label=\"Edit\"\r\n                        icon={<ViewIcon />}\r\n                        onClick={() => handleOnClick(row.empid)}\r\n                      />\r\n                    </Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">{row.name}</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">{row.course}</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">{row.institute}</Box>\r\n                  </GridItem>\r\n                  <GridItem colSpan={3}>\r\n                    <Box w=\"100%\">{row.expiry_date}</Box>\r\n                  </GridItem>\r\n                </Grid>\r\n                // <ListItem key={row.id}>\r\n                //   <Grid item sm={3} align=\"center\">\r\n                //     <ListItemText>{row.name}</ListItemText>\r\n                //   </Grid>\r\n                //   <Grid item sm={3} align=\"center\">\r\n                //     <ListItemText>{row.institute}</ListItemText>\r\n                //   </Grid>\r\n                //   <Grid item sm={3} align=\"center\">\r\n                //     <ListItemText>{row.course}</ListItemText>\r\n                //   </Grid>\r\n                //   <Grid item sm={3} align=\"center\">\r\n                //     <ListItemText>{row.expiry_date}</ListItemText>\r\n                //   </Grid>\r\n                // </ListItem>\r\n              );\r\n            }\r\n          })}\r\n      </Grid>\r\n    </List>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\nexport default TrainingsTableViewAdmin;\r\n"]},"metadata":{},"sourceType":"module"}