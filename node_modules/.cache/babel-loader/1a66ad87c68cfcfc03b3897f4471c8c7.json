{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\HocForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState } from \"recoil\";\n//import * as emailjs from \"emailjs-com\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n//import { useEmployeesContext } from \"../context/employees_context\";\n//import { useExpensesContext } from \"../context/expenses_context\";\nimport { Controller, useForm } from \"react-hook-form\";\n//import { useCustomToast } from \"../helpers/useCustomToast\";\nimport { useEmployees } from \"./employees/useEmployees\";\n//import { useHoc } from \"./hoc/useHoc\";\nimport { useAddHoc } from \"./hoc/useAddHoc\";\n//import { useDeleteHoc } from \"./hoc/useDeleteHoc\";\nimport { useUpdateHoc } from \"./hoc/useUpdateHoc\";\nimport { useHoccategory } from \"./hoccategory/useHoccategory\";\nimport { useHocwhat } from \"./hocwhat/useHocwhat\";\nimport { useHocwhatdetails } from \"./hocwhatdetails/useHocwhatdetails\";\nimport { useHocwhy } from \"./hocwhy/useHocwhy\";\nimport { useHocwhydetails } from \"./hocwhydetails/useHocwhydetails\";\nimport { useHoclocation } from \"./hoclocation/useHoclocation\";\n\n//const SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\n//const TEMPLATE_ID = \"template_1y8odlq\";\n//const USER_ID = process.env.REACT_APP_EMAILJS_USERID;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HocForm = _ref => {\n  let {\n    formdata,\n    setFormdata,\n    handleDialogClose,\n    isEditId,\n    isNew\n  } = _ref;\n  const classes = useStyles();\n  //const toast = useCustomToast();\n  //const { hoc, filter, setFilter, setHocId } = useHoc();\n  const {\n    employees\n  } = useEmployees();\n  const {\n    hocwhat\n  } = useHocwhat();\n  const {\n    hocwhatdetails,\n    setHocwhatdetailsId\n  } = useHocwhatdetails();\n  const {\n    hocwhy,\n    setHocwhyId\n  } = useHocwhy();\n  const {\n    hocwhydetails,\n    setHocwhydetailsId\n  } = useHocwhydetails();\n  const {\n    hoccategory\n  } = useHoccategory();\n  const {\n    hoclocation,\n    setHoclocationId\n  } = useHoclocation();\n  const updateHoc = useUpdateHoc();\n  const addHoc = useAddHoc();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const [category, setCategory] = useState(\"\" || formdata.category);\n  const [whatstatus, setWhatstatus] = useState(\"\" || formdata.what);\n  const [whystatus, setWhystatus] = useState(\"\" || formdata.why);\n  //const [useremail, setUserEmail] = useState(\"\");\n\n  console.log(\"formdata\", formdata);\n  const {\n    handleSubmit,\n    control\n  } = useForm({\n    defaultValues: {\n      ...formdata\n    }\n  });\n\n  /* const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n      emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  }; */\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    if (isNew) {\n      const {\n        tableData,\n        ...fields\n      } = data;\n      const emp = employees.filter(r => r.name === data.raisedby);\n      console.log(\"emp\", emp);\n      addHoc({\n        ...fields,\n        empid: emp[0].id,\n        email: emp[0].email\n      });\n    } else {\n      if (data.id) {\n        const {\n          id,\n          tableData,\n          ...fields\n        } = data;\n        updateHoc({\n          id,\n          ...fields\n        });\n      } else {\n        const {\n          tableData,\n          ...fields\n        } = data;\n        addHoc({\n          ...fields,\n          empid: loginLevel.loginUserId\n        });\n        //handleSentEmail(data);\n      }\n    }\n\n    handleDialogClose();\n  };\n  useEffect(() => {\n    setHoclocationId(\"C\");\n  }, []);\n  useEffect(() => {\n    if (whatstatus === \"\") {\n      setHocwhatdetailsId(prev => prev = \"none\");\n    } else {\n      setHocwhatdetailsId(prev => prev = whatstatus);\n    }\n  }, [whatstatus]);\n  useEffect(() => {\n    if (category === \"Positive Act\") {\n      //setHocwhyId((prev) => (prev = \"none\"));\n      setHocwhydetailsId(prev => prev = \"none\");\n    } else {\n      setHocwhyId(prev => prev = \"\");\n      setHocwhydetailsId(prev => prev = whystatus);\n    }\n  }, [whystatus, category]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"HOC FORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        children: \"HOC Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"findings\",\n            control: control,\n            defaultValue: formdata.findings,\n            render: _ref2 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"What is/are the findings?\",\n                id: \"margin-findings\",\n                name: \"findings\",\n                defaultValue: formdata.findings,\n                className: classes.textField,\n                onChange: onChange,\n                multiline: true,\n                rows: 2,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"Findings is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"risks\",\n            control: control,\n            defaultValue: formdata.risks,\n            render: _ref3 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"What is/are the potential hazard(s)/risk(s)?\",\n                id: \"margin-risks\",\n                name: \"risks\",\n                defaultValue: formdata.risks,\n                className: classes.textField,\n                onChange: onChange,\n                multiline: true,\n                rows: 2,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"Potential hazard/risk is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"category\",\n            control: control,\n            defaultValue: formdata.category,\n            render: _ref4 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref4;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Type/Category\"\n                //type=\"date\"\n                ,\n                id: \"margin-category\",\n                name: \"formdata.category\",\n                value: value,\n                className: classes.textField,\n                onChange: e => {\n                  onChange(e.target.value);\n                  setCategory(prev => prev = e.target.value);\n                },\n                error: !!error,\n                helperText: error ? error.message : null\n                // InputLabelProps={{\n                //   shrink: true,\n                // }}\n                ,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this), hoccategory && hoccategory.map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.description,\n                    children: rec.description\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 27\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"Category is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"what\",\n            control: control,\n            defaultValue: formdata.what,\n            render: _ref5 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref5;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"What\",\n                id: \"margin-what\",\n                name: \"what\",\n                defaultValue: formdata.what,\n                className: classes.textField,\n                onChange: e => {\n                  onChange(e.target.value);\n                  setWhatstatus(prev => prev = e.target.value);\n                },\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this), hocwhat && hocwhat.filter(r => {\n                  // if (category === \"Positive Act\") {\n                  //   return r.positiveact;\n                  // } else {\n                  //   return r.unsafeact;\n                  // }\n                  switch (category) {\n                    case \"Positive Act\":\n                      return r.positiveact;\n                    case \"Quality\":\n                      return r.quality;\n                    default:\n                      return r.unsafeact;\n                  }\n                }).map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.description,\n                    children: rec.description\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this);\n            }\n            //rules={{ required: \"What is required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"what_details\",\n            control: control,\n            defaultValue: formdata.what_details,\n            render: _ref6 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref6;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"What Details\",\n                id: \"margin-whatdetails\",\n                name: \"what_details\",\n                defaultValue: formdata.what_details,\n                value: value,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this), hocwhatdetails && hocwhatdetails.filter(r => {\n                  // if (category === \"Positive Act\") {\n                  //   return r.positiveact;\n                  // } else {\n                  //   return r.unsafeact;\n                  // }\n                  switch (category) {\n                    case \"Positive Act\":\n                      return r.positiveact;\n                    case \"Quality\":\n                      return r.quality;\n                    default:\n                      return r.unsafeact;\n                  }\n                }).map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.description,\n                    children: rec.description\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this);\n            }\n            //rules={{ required: \"What detail is required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"why\",\n            control: control,\n            defaultValue: formdata.why,\n            render: _ref7 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref7;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Why\"\n                //type=\"number\"\n                ,\n                id: \"standard-why\",\n                name: \"why\",\n                defaultValue: formdata.why,\n                className: classes.textField\n                //onChange={onChange}\n                ,\n                onChange: e => {\n                  onChange(e.target.value);\n                  setWhystatus(prev => prev = e.target.value);\n                },\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 21\n                }, this), hocwhy && hocwhy.filter(r => {\n                  switch (category) {\n                    case \"Positive Act\":\n                      return r.positiveact;\n                    case \"Quality\":\n                      return r.quality;\n                    default:\n                      return r.unsafeact;\n                  }\n                }).map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.description,\n                    children: rec.description\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this);\n            }\n            //rules={{ required: \"Why is required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"why_details\",\n            control: control,\n            defaultValue: formdata.why_details,\n            render: _ref8 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref8;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Why Details\",\n                id: \"margin-whydetails\",\n                name: \"why_details\",\n                defaultValue: formdata.why_details,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 21\n                }, this), hocwhydetails && hocwhydetails.map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.description,\n                    children: rec.description\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 27\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this);\n            }\n            //rules={{ required: \"Why detail is required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"discussion\",\n            control: control,\n            defaultValue: formdata.discussion,\n            render: _ref9 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref9;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Did a conversation take place?\",\n                id: \"margin-discussion\",\n                name: \"discussion\",\n                defaultValue: formdata.discussion,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Yes\",\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"No\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this);\n            }\n            //rules={{ required: \"Status is required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"action\",\n            control: control,\n            defaultValue: formdata.action,\n            render: _ref10 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref10;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Was there an agreed remedial/corrective or preventive action? \",\n                id: \"margin-action\",\n                name: \"action\",\n                defaultValue: formdata.action,\n                className: classes.textField,\n                onChange: onChange,\n                multiline: true,\n                rows: 2,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 19\n              }, this);\n            }\n            //rules={{ required: \"Status is required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"isfollowup\",\n            control: control,\n            defaultValue: formdata.isfollowup,\n            render: _ref11 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref11;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Follow-up required?\",\n                id: \"standard-isfollowup\",\n                name: \"isfollowup\",\n                defaultValue: formdata.isfollowup,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Yes\",\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"No\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this);\n            }\n            //rules={{ required: \"IC No required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"isworkrelated\",\n            control: control,\n            defaultValue: formdata.isworkrelated,\n            render: _ref12 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref12;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Work Related?\",\n                id: \"margin-workrelated\",\n                name: \"isworkrelated\",\n                defaultValue: formdata.isworkrelated,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Yes\",\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"No\",\n                  children: \"No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 19\n              }, this);\n            }\n            //rules={{ required: \"Status is required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), formdata.raisedby ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"raisedby\",\n            control: control,\n            defaultValue: formdata.raisedby,\n            render: _ref13 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref13;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Raised By\",\n                id: \"margin-raisedby\",\n                name: \"raisedby\",\n                defaultValue: formdata.raisedby,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                inputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 21\n              }, this);\n            }\n            //rules={{ required: \"Status is required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"raisedby\",\n            control: control,\n            defaultValue: formdata.raisedby,\n            render: _ref14 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref14;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Raised By\",\n                id: \"margin-raisedby\",\n                name: \"raisedby\",\n                defaultValue: formdata.raisedby,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null\n                //inputProps={{ readOnly: true }}\n                ,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 23\n                }, this), employees && employees.filter(r => !r.hasresigned).sort((a, b) => a.name > b.name ? 1 : b.name > a.name ? -1 : 0).map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.name,\n                    children: rec.name\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 31\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 21\n              }, this);\n            }\n            //rules={{ required: \"Status is required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"raisedon\",\n            control: control,\n            defaultValue: formdata.raisedon,\n            render: _ref15 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref15;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Raised On\",\n                id: \"margin-raisedon\",\n                name: \"raisedon\",\n                type: \"date\",\n                defaultValue: formdata.raisedon,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 19\n              }, this);\n            }\n            //rules={{ required: \"Status is required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"company\",\n            control: control,\n            defaultValue: formdata.company,\n            render: _ref16 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref16;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Company\",\n                id: \"margin-company\",\n                name: \"company\",\n                defaultValue: formdata.company,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                inputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 19\n              }, this);\n            }\n            //rules={{ required: \"Status is required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"location\",\n            control: control,\n            defaultValue: formdata.location,\n            render: _ref17 => {\n              let {\n                field: {\n                  onChange,\n                  value\n                },\n                fieldState: {\n                  error\n                }\n              } = _ref17;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Location\",\n                id: \"margin-location\",\n                name: \"location\",\n                defaultValue: formdata.location,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 21\n                }, this), hoclocation && hoclocation.map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.name,\n                    children: rec.name\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 27\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 19\n              }, this);\n            }\n            //rules={{ required: \"Status is required\" }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button\n            //onClick={() => handleSubmit(onSubmit)()}\n            ,\n            children: [\"Save \", /*#__PURE__*/_jsxDEV(Icon, {\n              className: classes.rightIcon,\n              children: \"send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 500\n  }\n}));\nexport default HocForm;","map":{"version":3,"names":["React","useState","useEffect","Button","Icon","TextField","Paper","Typography","makeStyles","useRecoilState","loginLevelState","MenuItem","Controller","useForm","useEmployees","useAddHoc","useUpdateHoc","useHoccategory","useHocwhat","useHocwhatdetails","useHocwhy","useHocwhydetails","useHoclocation","HocForm","formdata","setFormdata","handleDialogClose","isEditId","isNew","classes","useStyles","employees","hocwhat","hocwhatdetails","setHocwhatdetailsId","hocwhy","setHocwhyId","hocwhydetails","setHocwhydetailsId","hoccategory","hoclocation","setHoclocationId","updateHoc","addHoc","loginLevel","setLoginLevel","category","setCategory","whatstatus","setWhatstatus","what","whystatus","setWhystatus","why","console","log","handleSubmit","control","defaultValues","onSubmit","data","e","preventDefault","tableData","fields","emp","filter","r","name","raisedby","empid","id","email","loginUserId","prev","root","findings","field","onChange","value","fieldState","error","textField","message","required","risks","target","map","rec","description","positiveact","quality","unsafeact","what_details","why_details","discussion","action","isfollowup","isworkrelated","readOnly","hasresigned","sort","a","b","raisedon","shrink","company","location","button","rightIcon","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","width"],"sources":["D:/react-myprojects/hrms-airtable/src/components/HocForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Icon, TextField, Paper, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\n//import * as emailjs from \"emailjs-com\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n//import { useEmployeesContext } from \"../context/employees_context\";\r\n//import { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\n//import { useCustomToast } from \"../helpers/useCustomToast\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\n//import { useHoc } from \"./hoc/useHoc\";\r\nimport { useAddHoc } from \"./hoc/useAddHoc\";\r\n//import { useDeleteHoc } from \"./hoc/useDeleteHoc\";\r\nimport { useUpdateHoc } from \"./hoc/useUpdateHoc\";\r\nimport { useHoccategory } from \"./hoccategory/useHoccategory\";\r\nimport { useHocwhat } from \"./hocwhat/useHocwhat\";\r\nimport { useHocwhatdetails } from \"./hocwhatdetails/useHocwhatdetails\";\r\nimport { useHocwhy } from \"./hocwhy/useHocwhy\";\r\nimport { useHocwhydetails } from \"./hocwhydetails/useHocwhydetails\";\r\nimport { useHoclocation } from \"./hoclocation/useHoclocation\";\r\n\r\n//const SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\n//const TEMPLATE_ID = \"template_1y8odlq\";\r\n//const USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\n\r\nconst HocForm = ({\r\n  formdata,\r\n  setFormdata,\r\n  handleDialogClose,\r\n  isEditId,\r\n  isNew,\r\n}) => {\r\n  const classes = useStyles();\r\n  //const toast = useCustomToast();\r\n  //const { hoc, filter, setFilter, setHocId } = useHoc();\r\n  const { employees } = useEmployees();\r\n  const { hocwhat } = useHocwhat();\r\n  const { hocwhatdetails, setHocwhatdetailsId } = useHocwhatdetails();\r\n  const { hocwhy, setHocwhyId } = useHocwhy();\r\n  const { hocwhydetails, setHocwhydetailsId } = useHocwhydetails();\r\n  const { hoccategory } = useHoccategory();\r\n  const { hoclocation, setHoclocationId } = useHoclocation();\r\n  const updateHoc = useUpdateHoc();\r\n  const addHoc = useAddHoc();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const [category, setCategory] = useState(\"\" || formdata.category);\r\n  const [whatstatus, setWhatstatus] = useState(\"\" || formdata.what);\r\n  const [whystatus, setWhystatus] = useState(\"\" || formdata.why);\r\n  //const [useremail, setUserEmail] = useState(\"\");\r\n\r\n  console.log(\"formdata\", formdata);\r\n\r\n  const { handleSubmit, control } = useForm({\r\n    defaultValues: {\r\n      ...formdata,\r\n    },\r\n  });\r\n\r\n  /* const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  }; */\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n\r\n    if (isNew) {\r\n      const { tableData, ...fields } = data;\r\n      const emp = employees.filter((r) => r.name === data.raisedby);\r\n      console.log(\"emp\", emp);\r\n      addHoc({ ...fields, empid: emp[0].id, email: emp[0].email });\r\n    } else {\r\n      if (data.id) {\r\n        const { id, tableData, ...fields } = data;\r\n        updateHoc({ id, ...fields });\r\n      } else {\r\n        const { tableData, ...fields } = data;\r\n        addHoc({ ...fields, empid: loginLevel.loginUserId });\r\n        //handleSentEmail(data);\r\n      }\r\n    }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setHoclocationId(\"C\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (whatstatus === \"\") {\r\n      setHocwhatdetailsId((prev) => (prev = \"none\"));\r\n    } else {\r\n      setHocwhatdetailsId((prev) => (prev = whatstatus));\r\n    }\r\n  }, [whatstatus]);\r\n\r\n  useEffect(() => {\r\n    if (category === \"Positive Act\") {\r\n      //setHocwhyId((prev) => (prev = \"none\"));\r\n      setHocwhydetailsId((prev) => (prev = \"none\"));\r\n    } else {\r\n      setHocwhyId((prev) => (prev = \"\"));\r\n      setHocwhydetailsId((prev) => (prev = whystatus));\r\n    }\r\n  }, [whystatus, category]);\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          HOC FORM\r\n        </Typography>\r\n        <Typography component=\"p\">HOC Form</Typography>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"findings\"\r\n              control={control}\r\n              defaultValue={formdata.findings}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What is/are the findings?\"\r\n                    id=\"margin-findings\"\r\n                    name=\"findings\"\r\n                    defaultValue={formdata.findings}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    multiline\r\n                    rows={2}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Findings is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"risks\"\r\n              control={control}\r\n              defaultValue={formdata.risks}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What is/are the potential hazard(s)/risk(s)?\"\r\n                    id=\"margin-risks\"\r\n                    name=\"risks\"\r\n                    defaultValue={formdata.risks}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    multiline\r\n                    rows={2}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Potential hazard/risk is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"category\"\r\n              control={control}\r\n              defaultValue={formdata.category}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Type/Category\"\r\n                    //type=\"date\"\r\n                    id=\"margin-category\"\r\n                    name=\"formdata.category\"\r\n                    value={value}\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      onChange(e.target.value);\r\n                      setCategory((prev) => (prev = e.target.value));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    // InputLabelProps={{\r\n                    //   shrink: true,\r\n                    // }}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hoccategory &&\r\n                      hoccategory.map((rec) => {\r\n                        return (\r\n                          <MenuItem key={rec.id} value={rec.description}>\r\n                            {rec.description}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Category is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"what\"\r\n              control={control}\r\n              defaultValue={formdata.what}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What\"\r\n                    id=\"margin-what\"\r\n                    name=\"what\"\r\n                    defaultValue={formdata.what}\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      onChange(e.target.value);\r\n                      setWhatstatus((prev) => (prev = e.target.value));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hocwhat &&\r\n                      hocwhat\r\n                        .filter((r) => {\r\n                          // if (category === \"Positive Act\") {\r\n                          //   return r.positiveact;\r\n                          // } else {\r\n                          //   return r.unsafeact;\r\n                          // }\r\n                          switch (category) {\r\n                            case \"Positive Act\":\r\n                              return r.positiveact;\r\n                            case \"Quality\":\r\n                              return r.quality;\r\n                            default:\r\n                              return r.unsafeact;\r\n                          }\r\n                        })\r\n                        .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.description}>\r\n                              {rec.description}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"What is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"what_details\"\r\n              control={control}\r\n              defaultValue={formdata.what_details}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"What Details\"\r\n                    id=\"margin-whatdetails\"\r\n                    name=\"what_details\"\r\n                    defaultValue={formdata.what_details}\r\n                    value={value}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hocwhatdetails &&\r\n                      hocwhatdetails\r\n                        .filter((r) => {\r\n                          // if (category === \"Positive Act\") {\r\n                          //   return r.positiveact;\r\n                          // } else {\r\n                          //   return r.unsafeact;\r\n                          // }\r\n                          switch (category) {\r\n                            case \"Positive Act\":\r\n                              return r.positiveact;\r\n                            case \"Quality\":\r\n                              return r.quality;\r\n                            default:\r\n                              return r.unsafeact;\r\n                          }\r\n                        })\r\n                        .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.description}>\r\n                              {rec.description}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"What detail is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"why\"\r\n              control={control}\r\n              defaultValue={formdata.why}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Why\"\r\n                    //type=\"number\"\r\n                    id=\"standard-why\"\r\n                    name=\"why\"\r\n                    defaultValue={formdata.why}\r\n                    className={classes.textField}\r\n                    //onChange={onChange}\r\n                    onChange={(e) => {\r\n                      onChange(e.target.value);\r\n                      setWhystatus((prev) => (prev = e.target.value));\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hocwhy &&\r\n                      hocwhy\r\n                        .filter((r) => {\r\n                          switch (category) {\r\n                            case \"Positive Act\":\r\n                              return r.positiveact;\r\n                            case \"Quality\":\r\n                              return r.quality;\r\n                            default:\r\n                              return r.unsafeact;\r\n                          }\r\n                        })\r\n                        .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.description}>\r\n                              {rec.description}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Why is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"why_details\"\r\n              control={control}\r\n              defaultValue={formdata.why_details}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Why Details\"\r\n                    id=\"margin-whydetails\"\r\n                    name=\"why_details\"\r\n                    defaultValue={formdata.why_details}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hocwhydetails &&\r\n                      hocwhydetails.map((rec) => {\r\n                        return (\r\n                          <MenuItem key={rec.id} value={rec.description}>\r\n                            {rec.description}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Why detail is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"discussion\"\r\n              control={control}\r\n              defaultValue={formdata.discussion}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Did a conversation take place?\"\r\n                    id=\"margin-discussion\"\r\n                    name=\"discussion\"\r\n                    defaultValue={formdata.discussion}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                    <MenuItem value=\"No\">No</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"action\"\r\n              control={control}\r\n              defaultValue={formdata.action}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Was there an agreed remedial/corrective or preventive action? \"\r\n                    id=\"margin-action\"\r\n                    name=\"action\"\r\n                    defaultValue={formdata.action}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    multiline\r\n                    rows={2}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"isfollowup\"\r\n              control={control}\r\n              defaultValue={formdata.isfollowup}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Follow-up required?\"\r\n                    id=\"standard-isfollowup\"\r\n                    name=\"isfollowup\"\r\n                    defaultValue={formdata.isfollowup}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                    <MenuItem value=\"No\">No</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"IC No required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"isworkrelated\"\r\n              control={control}\r\n              defaultValue={formdata.isworkrelated}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Work Related?\"\r\n                    id=\"margin-workrelated\"\r\n                    name=\"isworkrelated\"\r\n                    defaultValue={formdata.isworkrelated}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"Yes\">Yes</MenuItem>\r\n                    <MenuItem value=\"No\">No</MenuItem>\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          {formdata.raisedby ? (\r\n            <div>\r\n              <Controller\r\n                name=\"raisedby\"\r\n                control={control}\r\n                defaultValue={formdata.raisedby}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Raised By\"\r\n                      id=\"margin-raisedby\"\r\n                      name=\"raisedby\"\r\n                      defaultValue={formdata.raisedby}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                      inputProps={{ readOnly: true }}\r\n                    ></TextField>\r\n                  );\r\n                }}\r\n                //rules={{ required: \"Status is required\" }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Controller\r\n                name=\"raisedby\"\r\n                control={control}\r\n                defaultValue={formdata.raisedby}\r\n                render={({\r\n                  field: { onChange, value },\r\n                  fieldState: { error },\r\n                }) => {\r\n                  return (\r\n                    <TextField\r\n                      label=\"Raised By\"\r\n                      id=\"margin-raisedby\"\r\n                      name=\"raisedby\"\r\n                      defaultValue={formdata.raisedby}\r\n                      className={classes.textField}\r\n                      onChange={onChange}\r\n                      error={!!error}\r\n                      helperText={error ? error.message : null}\r\n                      //inputProps={{ readOnly: true }}\r\n                      select\r\n                    >\r\n                      <MenuItem value=\"\">None</MenuItem>\r\n                      {employees &&\r\n                        employees\r\n                          .filter((r) => !r.hasresigned)\r\n                          .sort((a, b) =>\r\n                            a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n                          )\r\n                          .map((rec) => {\r\n                            return (\r\n                              <MenuItem key={rec.id} value={rec.name}>\r\n                                {rec.name}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                    </TextField>\r\n                  );\r\n                }}\r\n                //rules={{ required: \"Status is required\" }}\r\n              />\r\n            </div>\r\n          )}\r\n          <div>\r\n            <Controller\r\n              name=\"raisedon\"\r\n              control={control}\r\n              defaultValue={formdata.raisedon}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Raised On\"\r\n                    id=\"margin-raisedon\"\r\n                    name=\"raisedon\"\r\n                    type=\"date\"\r\n                    defaultValue={formdata.raisedon}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"company\"\r\n              control={control}\r\n              defaultValue={formdata.company}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Company\"\r\n                    id=\"margin-company\"\r\n                    name=\"company\"\r\n                    defaultValue={formdata.company}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    inputProps={{ readOnly: true }}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"location\"\r\n              control={control}\r\n              defaultValue={formdata.location}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Location\"\r\n                    id=\"margin-location\"\r\n                    name=\"location\"\r\n                    defaultValue={formdata.location}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {hoclocation &&\r\n                      hoclocation.map((rec) => {\r\n                        return (\r\n                          <MenuItem key={rec.id} value={rec.name}>\r\n                            {rec.name}\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div>\r\n          {/* <div>\r\n            <Controller\r\n              name=\"department\"\r\n              control={control}\r\n              defaultValue={formdata.department}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Department\"\r\n                    id=\"margin-department\"\r\n                    name=\"department\"\r\n                    defaultValue={formdata.department}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  ></TextField>\r\n                );\r\n              }}\r\n              //rules={{ required: \"Status is required\" }}\r\n            />\r\n          </div> */}\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              //onClick={() => handleSubmit(onSubmit)()}\r\n            >\r\n              Save <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 500,\r\n  },\r\n}));\r\n\r\nexport default HocForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}