{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\ExportExpense2Excel.js\";\nimport React, { useEffect } from \"react\"; //import ReactExport from \"react-export-excel\";\n\nimport ReactExport from \"react-data-export\"; //import { ExcelFile, ExcelSheet } from \"react-export-excel\";\n\nimport { Button } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet; //const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst ExportExpense2Excel = ({\n  filename,\n  dataset,\n  title\n}) => {\n  const cols = [{\n    title: \"Name\",\n    width: {\n      wch: 50\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"#F5FFFA\" } },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"#F5FFFA\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"left\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Purchased Date\",\n    width: {\n      wch: 18\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"#F5FFFA\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"center\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Purchased From\",\n    width: {\n      wch: 40\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"left\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Description\",\n    width: {\n      wch: 40\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"left\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Amount\",\n    width: {\n      wch: 28\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"right\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Remark\",\n    width: {\n      wch: 40\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"left\",\n        vertical: \"top\"\n      }\n    }\n  }, {\n    title: \"Status\",\n    width: {\n      wch: 18\n    },\n    style: {\n      font: {\n        sz: \"9\",\n        bold: true\n      },\n      //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\n      alignment: {\n        wrapText: true,\n        horizontal: \"left\",\n        vertical: \"top\"\n      }\n    }\n  }];\n  const data = dataset.map((rec, index) => {\n    return [{\n      value: rec.name ? rec.name : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"left\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.purchased_date ? rec.purchased_date : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"center\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.purchased_from ? rec.purchased_from : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"left\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.description ? rec.description : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"left\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.reason ? rec.reason : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"left\",\n          vertical: \"top\"\n        }\n      }\n    }, {\n      value: rec.status ? rec.status : \"\",\n      style: {\n        font: {\n          sz: \"9\"\n        },\n        alignment: {\n          wrapText: true,\n          horizontal: \"left\",\n          vertical: \"top\"\n        }\n      }\n    }];\n  });\n  const multiDataSet = [// {\n  //   columns: cols1,\n  //   data: [],\n  // },\n  {\n    columns: cols,\n    data: data\n  }];\n  return (\n    /*#__PURE__*/\n    // <ExcelFile element={<Button>Export to Excel</Button>} filename={filename}>\n    //   <ExcelSheet dataSet={multiDataSet1} name=\"Organization\" />\n    // </ExcelFile>\n    _jsxDEV(ExcelFile, {\n      element: /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"teal\",\n        variant: \"solid\",\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this),\n      filename: filename,\n      children: /*#__PURE__*/_jsxDEV(ExcelSheet, {\n        dataSet: multiDataSet,\n        name: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }, this) // <ExcelFile filename={filename}>\n    //   <ExcelSheet dataSet={multiDataSet} name=\"HOC\" />\n    // </ExcelFile>\n    // <ExcelFile element={<Button>Export to Excel</Button>} filename={filename}>\n    //   <ExcelSheet data={dataset} name={title}>\n    //     <ExcelColumn label=\"Name\" value=\"name\" />\n    //     <ExcelColumn label=\"From Date\" value=\"from_date\" />\n    //     <ExcelColumn label=\"To Date\" value=\"to_date\" />\n    //     <ExcelColumn label=\"No of Days\" value=\"no_of_days\" />\n    //     <ExcelColumn label=\"Reason\" value=\"reason\" />\n    //     <ExcelColumn label=\"Status\" value=\"status\" />\n    //   </ExcelSheet>\n    //</ExcelFile>\n\n  );\n};\n\nexport default ExportExpense2Excel;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/ExportExpense2Excel.js"],"names":["React","useEffect","ReactExport","Button","ExcelFile","ExcelSheet","ExportExpense2Excel","filename","dataset","title","cols","width","wch","style","font","sz","bold","alignment","wrapText","horizontal","vertical","data","map","rec","index","value","name","purchased_date","purchased_from","description","reason","status","multiDataSet","columns"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\n//import ReactExport from \"react-export-excel\";\r\nimport ReactExport from \"react-data-export\";\r\n//import { ExcelFile, ExcelSheet } from \"react-export-excel\";\r\nimport { Button } from \"@chakra-ui/react\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n//const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst ExportExpense2Excel = ({ filename, dataset, title }) => {\r\n  const cols = [\r\n    {\r\n      title: \"Name\",\r\n      width: { wch: 50 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"#F5FFFA\" } },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"#F5FFFA\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"left\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Purchased Date\",\r\n      width: { wch: 18 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"#F5FFFA\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n\r\n    {\r\n      title: \"Purchased From\",\r\n      width: { wch: 40 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"left\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      width: { wch: 40 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"left\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Amount\",\r\n      width: { wch: 28 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"right\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Remark\",\r\n      width: { wch: 40 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"left\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      width: { wch: 18 },\r\n      style: {\r\n        font: { sz: \"9\", bold: true },\r\n        //fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"left\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  const data = dataset.map((rec, index) => {\r\n    return [\r\n      {\r\n        value: rec.name ? rec.name : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"left\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.purchased_date ? rec.purchased_date : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"center\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.purchased_from ? rec.purchased_from : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"left\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.description ? rec.description : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"left\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        value: rec.reason ? rec.reason : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"left\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n\r\n      {\r\n        value: rec.status ? rec.status : \"\",\r\n        style: {\r\n          font: { sz: \"9\" },\r\n          alignment: {\r\n            wrapText: true,\r\n            horizontal: \"left\",\r\n            vertical: \"top\",\r\n          },\r\n        },\r\n      },\r\n    ];\r\n  });\r\n\r\n  const multiDataSet = [\r\n    // {\r\n    //   columns: cols1,\r\n    //   data: [],\r\n    // },\r\n    {\r\n      columns: cols,\r\n      data: data,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    // <ExcelFile element={<Button>Export to Excel</Button>} filename={filename}>\r\n    //   <ExcelSheet dataSet={multiDataSet1} name=\"Organization\" />\r\n    // </ExcelFile>\r\n\r\n    <ExcelFile\r\n      element={\r\n        <Button colorScheme=\"teal\" variant=\"solid\">\r\n          Download\r\n        </Button>\r\n      }\r\n      filename={filename}\r\n    >\r\n      <ExcelSheet dataSet={multiDataSet} name={title} />\r\n    </ExcelFile>\r\n\r\n    // <ExcelFile filename={filename}>\r\n    //   <ExcelSheet dataSet={multiDataSet} name=\"HOC\" />\r\n    // </ExcelFile>\r\n\r\n    // <ExcelFile element={<Button>Export to Excel</Button>} filename={filename}>\r\n    //   <ExcelSheet data={dataset} name={title}>\r\n    //     <ExcelColumn label=\"Name\" value=\"name\" />\r\n    //     <ExcelColumn label=\"From Date\" value=\"from_date\" />\r\n    //     <ExcelColumn label=\"To Date\" value=\"to_date\" />\r\n    //     <ExcelColumn label=\"No of Days\" value=\"no_of_days\" />\r\n    //     <ExcelColumn label=\"Reason\" value=\"reason\" />\r\n    //     <ExcelColumn label=\"Status\" value=\"status\" />\r\n    //   </ExcelSheet>\r\n    //</ExcelFile>\r\n  );\r\n};\r\nexport default ExportExpense2Excel;\r\n"]},"metadata":{},"sourceType":"module"}