{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\ConvertEmpEmail.js\";\nimport React, { useState } from \"react\";\nimport { Button, Icon, TextField, Paper, Typography, Divider, MenuItem } from \"@material-ui/core\";\nimport { Box, Heading } from \"@chakra-ui/react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_state = {\n  name: \"\",\n  email: \"\",\n  newemail: \"\",\n  loginpw: \"\"\n};\n\nconst ConvertEmpEmail = () => {\n  const classes = useStyles(); //const toast = useCustomToast();\n\n  const {\n    employees\n  } = useEmployees();\n  const updateEmployee = useUpdateEmployees();\n  const [state, setState] = useState(initial_state);\n  const [isExit, setIsExit] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false); //const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n\n  const {\n    handleSubmit,\n    control,\n    setValue\n  } = useForm(); //const initialValues = Object.values(initial_state).join(\"\");\n  //const {\n  //editEmployeeID,\n  //employees_loading,\n  //deleteEmployee,\n  //loadEmployees,\n  //setEditEmployeeID,\n  //setIsEditingOn,\n  //setIsEditingOff,\n  //resetSingleEmployee,\n  //resetEmployees,\n  //getSingleEmployee,\n  //} = useEmployeesContext();\n\n  const handleAlertOpen = () => {\n    setIsAlertOpen(true);\n  };\n\n  const handleAlertClose = () => {\n    setIsAlertOpen(false);\n  };\n\n  const handleOnConfirm = data => {\n    console.log(\"confirm\", data); //const { id, period, empid } = deletestate;\n    //delete allows detls\n    //console.log(\"allowsdetls\", dailyallowsdetls);\n    //dailyallowsdetls\n    //.filter((f) => f.empid === empid)\n    //.forEach((rec) => {\n    // if (rec.period === period && rec.empid === empid) {\n    //console.log(\"del id\", rec.id);\n    //  deleteDailyAllowsDetls(rec.id);\n    // }\n    //});\n    //delete daily allows\n    //deleteDailyAllows(id);\n    // toast({\n    //   title: `Site Allowances has been successfully deleted!`,\n    //   status: \"warning\",\n    // });\n  };\n\n  const handleSearchEmail = data => {\n    const currentemail = employees.filter(r => r.name === data).map(rec => rec.email);\n    console.log(\"searchemail\", currentemail[0]);\n  };\n\n  const onSubmit = data => {\n    const {\n      email\n    } = data;\n    const emp = employees && employees.filter(rec => rec.email === email);\n    console.log(\"exist\", emp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"EMPLOYEE EMAIL CONVERSION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            control: control,\n            defaultValue: state.name,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name\",\n                id: \"margin-normal\",\n                name: \"name\" //value={value}\n                ,\n                defaultValue: state.name,\n                className: classes.textField,\n                onChange: e => {\n                  onChange(e.target.value);\n                  handleSearchEmail(e.target.value);\n                },\n                error: !!error,\n                helperText: error ? error.message : null,\n                select: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this), employees && employees.filter(r => !r.hasresigned).sort((a, b) => a.name > b.name ? 1 : b.name > a.name ? -1 : 0).map(rec => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: rec.name,\n                    children: rec.name\n                  }, rec.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 29\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"Name required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"email\",\n            control: control,\n            defaultValue: state.email,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Current Email\",\n                id: \"margin-normal-email\",\n                name: \"email\",\n                type: \"email\",\n                defaultValue: state.email,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"Email is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"newemail\",\n            control: control,\n            defaultValue: state.newemail,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"New Email\",\n                id: \"margin-normal-email\",\n                name: \"newemail\",\n                type: \"email\",\n                defaultValue: state.newemail,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"Email is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"loginpw\",\n            control: control,\n            defaultValue: state.loginpw,\n            render: ({\n              field: {\n                onChange,\n                value\n              },\n              fieldState: {\n                error\n              }\n            }) => {\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Login EMail PW\",\n                id: \"margin-normal-email\",\n                name: \"loginpw\",\n                defaultValue: state.loginpw,\n                className: classes.textField,\n                onChange: onChange,\n                error: !!error,\n                helperText: error ? error.message : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this);\n            },\n            rules: {\n              required: \"Password is required\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.button,\n            onClick: handleSubmit(onSubmit),\n            children: [\"Convert \", /*#__PURE__*/_jsxDEV(Icon, {\n              className: classes.rightIcon,\n              children: \"send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), isExit && /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            size: \"md\",\n            pl: 2,\n            children: \"Warning! This email already existed!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n          onClose: handleAlertClose,\n          onConfirm: handleOnConfirm,\n          isOpen: isAlertOpen,\n          title: \"Convert Email\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Are you sure you want to convert ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default ConvertEmpEmail;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/ConvertEmpEmail.js"],"names":["React","useState","Button","Icon","TextField","Paper","Typography","Divider","MenuItem","Box","Heading","Controller","useForm","makeStyles","AlertDialogBox","useEmployees","useUpdateEmployees","initial_state","name","email","newemail","loginpw","ConvertEmpEmail","classes","useStyles","employees","updateEmployee","state","setState","isExit","setIsExit","isAlertOpen","setIsAlertOpen","handleSubmit","control","setValue","handleAlertOpen","handleAlertClose","handleOnConfirm","data","console","log","handleSearchEmail","currentemail","filter","r","map","rec","onSubmit","emp","root","field","onChange","value","fieldState","error","textField","e","target","message","hasresigned","sort","a","b","id","required","button","rightIcon","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","padding","container","display","flexWrap","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { Box, Heading } from \"@chakra-ui/react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\nconst initial_state = {\r\n  name: \"\",\r\n  email: \"\",\r\n  newemail: \"\",\r\n  loginpw: \"\",\r\n};\r\n\r\nconst ConvertEmpEmail = () => {\r\n  const classes = useStyles();\r\n  //const toast = useCustomToast();\r\n  const { employees } = useEmployees();\r\n  const updateEmployee = useUpdateEmployees();\r\n  const [state, setState] = useState(initial_state);\r\n  const [isExit, setIsExit] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  //const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { handleSubmit, control, setValue } = useForm();\r\n  //const initialValues = Object.values(initial_state).join(\"\");\r\n\r\n  //const {\r\n  //editEmployeeID,\r\n  //employees_loading,\r\n  //deleteEmployee,\r\n  //loadEmployees,\r\n  //setEditEmployeeID,\r\n  //setIsEditingOn,\r\n  //setIsEditingOff,\r\n  //resetSingleEmployee,\r\n  //resetEmployees,\r\n  //getSingleEmployee,\r\n  //} = useEmployeesContext();\r\n\r\n  const handleAlertOpen = () => {\r\n    setIsAlertOpen(true);\r\n  };\r\n\r\n  const handleAlertClose = () => {\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const handleOnConfirm = (data) => {\r\n    console.log(\"confirm\", data);\r\n    //const { id, period, empid } = deletestate;\r\n\r\n    //delete allows detls\r\n    //console.log(\"allowsdetls\", dailyallowsdetls);\r\n    //dailyallowsdetls\r\n    //.filter((f) => f.empid === empid)\r\n    //.forEach((rec) => {\r\n    // if (rec.period === period && rec.empid === empid) {\r\n    //console.log(\"del id\", rec.id);\r\n    //  deleteDailyAllowsDetls(rec.id);\r\n    // }\r\n    //});\r\n    //delete daily allows\r\n    //deleteDailyAllows(id);\r\n    // toast({\r\n    //   title: `Site Allowances has been successfully deleted!`,\r\n    //   status: \"warning\",\r\n    // });\r\n  };\r\n\r\n  const handleSearchEmail = (data) => {\r\n    const currentemail = employees\r\n      .filter((r) => r.name === data)\r\n      .map((rec) => rec.email);\r\n    console.log(\"searchemail\", currentemail[0]);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    const { email } = data;\r\n    const emp = employees && employees.filter((rec) => rec.email === email);\r\n    console.log(\"exist\", emp);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          EMPLOYEE EMAIL CONVERSION\r\n        </Typography>\r\n\r\n        <Divider />\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              defaultValue={state.name}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Name\"\r\n                    id=\"margin-normal\"\r\n                    name=\"name\"\r\n                    //value={value}\r\n                    defaultValue={state.name}\r\n                    className={classes.textField}\r\n                    onChange={(e) => {\r\n                      onChange(e.target.value);\r\n                      handleSearchEmail(e.target.value);\r\n                    }}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                    select\r\n                  >\r\n                    <MenuItem value=\"\">None</MenuItem>\r\n                    {employees &&\r\n                      employees\r\n                        .filter((r) => !r.hasresigned)\r\n                        .sort((a, b) =>\r\n                          a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n                        )\r\n                        .map((rec) => {\r\n                          return (\r\n                            <MenuItem key={rec.id} value={rec.name}>\r\n                              {rec.name}\r\n                            </MenuItem>\r\n                          );\r\n                        })}\r\n                  </TextField>\r\n                );\r\n              }}\r\n              rules={{ required: \"Name required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"email\"\r\n              control={control}\r\n              defaultValue={state.email}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Current Email\"\r\n                    id=\"margin-normal-email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    defaultValue={state.email}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"Email is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"newemail\"\r\n              control={control}\r\n              defaultValue={state.newemail}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"New Email\"\r\n                    id=\"margin-normal-email\"\r\n                    name=\"newemail\"\r\n                    type=\"email\"\r\n                    defaultValue={state.newemail}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"Email is required\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Controller\r\n              name=\"loginpw\"\r\n              control={control}\r\n              defaultValue={state.loginpw}\r\n              render={({\r\n                field: { onChange, value },\r\n                fieldState: { error },\r\n              }) => {\r\n                return (\r\n                  <TextField\r\n                    label=\"Login EMail PW\"\r\n                    id=\"margin-normal-email\"\r\n                    name=\"loginpw\"\r\n                    defaultValue={state.loginpw}\r\n                    className={classes.textField}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                );\r\n              }}\r\n              rules={{ required: \"Password is required\" }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              Convert <Icon className={classes.rightIcon}>send</Icon>\r\n            </Button>\r\n          </div>\r\n          {isExit && (\r\n            <Box>\r\n              <Heading size=\"md\" pl={2}>\r\n                Warning! This email already existed!\r\n              </Heading>\r\n            </Box>\r\n          )}\r\n        </form>\r\n        <div>\r\n          <AlertDialogBox\r\n            onClose={handleAlertClose}\r\n            onConfirm={handleOnConfirm}\r\n            isOpen={isAlertOpen}\r\n            title=\"Convert Email\"\r\n          >\r\n            <h2>Are you sure you want to convert ?</h2>\r\n          </AlertDialogBox>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default ConvertEmpEmail;\r\n"]},"metadata":{},"sourceType":"module"}