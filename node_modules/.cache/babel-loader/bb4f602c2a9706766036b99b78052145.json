{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\EmployeeTableLeaveBF.js\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport MaterialTable from \"material-table\";\nimport { useNavigate } from \"react-router-dom\";\nimport getYear from \"date-fns/getYear\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Button, Container, Divider, Heading, Grid, GridItem, Radio, RadioGroup, HStack, Select, Tabs, TabList, TabPanels, Tab, TabPanel, useRadioGroup, useDisclosure } from \"@chakra-ui/react\"; //import AddIcon from \"@material-ui/icons/Add\";\n//import EditIcon from \"@material-ui/icons/Edit\";\n//import DeleteIcon from \"@material-ui/icons/Delete\";\n//import CheckIcon from \"@material-ui/icons/Check\";\n//import SearchIcon from \"@material-ui/icons/Search\";\n//import LeaveForm from \"./LeaveForm\";\n//import { CustomDialog } from \"../helpers/CustomDialog\";\n//import { AlertDialog } from \"../helpers/AlertDialogBox\";\n//import { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\n\nimport { useEmployeesContext } from \"../context/employees_context\";\nimport { useEmployees } from \"./employees/useEmployees\";\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\nimport { useLeavesPeriod } from \"./leaves/useLeavesPeriod\";\nimport { usePeriods } from \"./periods/usePeriods\";\nimport { useUpdatePeriods } from \"./periods/useUpdatePeriods\";\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmployeeTableLeaveBF() {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const {\n    employees,\n    setEmployeeId\n  } = useEmployees();\n  const {\n    periods\n  } = usePeriods();\n  const updatePeriods = useUpdatePeriods();\n  const updateEmployees = useUpdateEmployees();\n  const {\n    leavesperiod,\n    setLeavePeriodYrId\n  } = useLeavesPeriod();\n  const [empdata, setEmpData] = useState([]);\n  const [toBuild, setToBuild] = useState(true);\n  const [selectleaveyear, setSelectLeaveYear] = useState(\"\");\n  const yearperiod = periods.filter(r => r.status !== \"C\"); // console.log('yearperiod', yearperiod)\n  // const YEAR = \"2022\"\n  //console.log(\"empdata\", empdata);\n\n  const {\n    isOpen: isAlertOpen,\n    onOpen: onAlertOpen,\n    onClose: onAlertClose\n  } = useDisclosure();\n  const {\n    //editEmployeeID,\n    //employees_loading,\n    //deleteEmployee,\n    //loadEmployees,\n    setEditEmployeeID,\n    setIsEditingOn,\n    //setIsEditingOff,\n    resetSingleEmployee,\n    resetEmployees //getSingleEmployee,\n\n  } = useEmployeesContext();\n  const columns = useMemo(() => [{\n    title: \"Name\",\n    field: \"name\",\n    cellStyle: {\n      width: 250,\n      maxWidth: 250\n    },\n    editable: \"never\"\n  }, // { title: \"IC No\", field: \"ic_no\" },\n  // { title: \"Gender\", field: \"gender\" },\n  // { title: \"Emp No\", field: \"empno\" },\n  // { title: \"Designation\", field: \"designation\" },\n  // { title: \"Department\", field: \"department\" },\n  {\n    title: \"Last Year Leave Balance\",\n    field: \"leave_bal\",\n    type: \"numeric\",\n    cellStyle: {\n      width: 60\n    },\n    editable: \"never\"\n  }, {\n    title: \"Leave Entitled\",\n    field: \"leave_entitled\",\n    type: \"numeric\",\n    cellStyle: {\n      width: 60,\n      backgroundColor: \"#e6e7e3\"\n    }\n  }, {\n    title: \"Leave B/F\",\n    field: \"newleave_bf\",\n    type: \"numeric\",\n    cellStyle: {\n      width: 60,\n      backgroundColor: \"#e6e7e3\"\n    }\n  }, {\n    title: \"Total Leave\",\n    field: \"newleaves_total\",\n    type: \"numeric\",\n    cellStyle: {\n      width: 60,\n      backgroundColor: \"#e6e7e3\"\n    }\n  }], []);\n\n  const Build_EmpData = YEAR => {\n    // eslint-disable-next-line no-lone-blocks\n    {\n      const emp = employees.map(rec => {\n        return { ...rec,\n          leave_total: 0,\n          leave_taken: 0,\n          leave_pending: 0\n        };\n      });\n      emp && emp.forEach((rec, index) => {\n        const {\n          id //name,\n          //icno,\n          //gender,\n          //designation,\n          //department,\n          //leave_entitled,\n          //leave_bf,\n          //leave_cd,\n\n        } = rec; // calculate leaves\n\n        const leavesdata = leavesperiod.filter(r => r.empid === id && getYear(new Date(r.from_date)) === YEAR);\n        console.log(\"leavedata\", YEAR, leavesdata);\n        const leaveTaken = leavesdata.reduce((acc, item) => {\n          if (item.status === \"Approved\" && item.leavetype === \"Annual Leave\") {\n            return acc + item.no_of_days;\n          } else {\n            return acc;\n          }\n        }, 0);\n        const leavePending = leavesdata.reduce((acc, item) => {\n          if (item.status === \"Pending\") {\n            return acc + item.no_of_days;\n          } else {\n            return acc;\n          }\n        }, 0);\n        const leaveOthers = leavesdata.reduce((acc, item) => {\n          if (item.status === \"Approved\" && item.leavetype !== \"Annual Leave\") {\n            return acc + item.no_of_days;\n          } else {\n            return acc;\n          }\n        }, 0);\n        const leaveEntitled = isNaN(emp[index].leave_entitled) ? 0 : emp[index].leave_entitled;\n        const leaveBf = isNaN(emp[index].leave_bf) ? 0 : emp[index].leave_bf; //const leaveCd = isNaN(emp[index].leave_cd) ? 0 : emp[index].leave_cd;\n\n        const leaveCd = 0;\n        const leavebal = leaveEntitled + leaveBf - leaveCd - leaveTaken;\n        const newleavebf = leavebal > 5 ? 5 : leavebal;\n        const newtotalleaves = newleavebf + leaveEntitled;\n        emp[index].leave_entitled = leaveEntitled;\n        emp[index].leave_cd = leaveCd;\n        emp[index].leave_total = leaveEntitled + leaveBf;\n        emp[index].leave_taken = leaveTaken + leaveCd;\n        emp[index].leave_pending = leavePending;\n        emp[index].leave_others = leaveOthers;\n        emp[index].leave_bal = leavebal;\n        emp[index].newleave_bf = newleavebf;\n        emp[index].newleaves_total = newtotalleaves;\n        setEmpData(emp);\n      });\n    }\n  };\n\n  const handleBuildEmpData = () => {\n    if (selectleaveyear === \"\") {\n      return null;\n    }\n\n    Build_EmpData(selectleaveyear);\n  };\n\n  const UpdateLeaveYear = e => {\n    setSelectLeaveYear(prev => prev = parseInt(e.target.value)); //Calc_Leave()\n    //setIsLoad(true);\n  };\n\n  const UpdateEmpProfile = () => {\n    empdata.forEach(rec => {\n      const {\n        id,\n        leave_entitled,\n        newleave_bf,\n        newleaves_total\n      } = rec;\n      const olddata = employees.filter(r => r.id === id).map(rec => {\n        return { ...rec\n        };\n      });\n      const newdata = { ...olddata[0],\n        leave_entitled: leave_entitled,\n        leave_bf: newleave_bf,\n        leave_bal: newleaves_total\n      };\n      updateEmployees({\n        id: id,\n        ...newdata\n      });\n    });\n  };\n\n  const handleOnUpdateConfirm = () => {\n    UpdateEmpProfile(); //console.log(\"post\", selectleaveyear, typeof selectleaveyear, periods);\n    //update periods\n\n    const currperiod = periods.filter(r => r.period === selectleaveyear.toString());\n    const updatedperiod = { ...currperiod[0],\n      status: \"C\"\n    };\n    const {\n      id,\n      rec_id,\n      ...fields\n    } = updatedperiod;\n    updatePeriods({\n      id: updatedperiod.id,\n      ...fields\n    });\n    setEmpData([]);\n  };\n\n  useEffect(() => {\n    setLeavePeriodYrId(selectleaveyear);\n  }, []); // useEffect(() => {\n  //   console.log(\"leaveperiod\", leavesperiod);\n  //   Build_EmpData(YEAR);\n  // }, []);\n  // useEffect(() => {\n  //   setLeavePeriodYrId(YEAR);\n  //   console.log(\"leaveperiod\", leavesperiod)\n  //   if (leavesperiod.length > 0) {\n  //     Build_EmpData(YEAR);\n  //     setToBuild(false);\n  //   } else {\n  //     setToBuild(true);\n  //   }\n  // }, [toBuild]);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    minW: \"container.lg\",\n    minH: 900,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      py: 2,\n      children: /*#__PURE__*/_jsxDEV(HStack, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          children: \"Leaves Balance Calculation B/F from Year \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectleaveyear,\n          fontSize: 20,\n          maxWidth: 100,\n          onChange: e => UpdateLeaveYear(e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), periods.filter(r => r.status !== \"C\").map(row => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: row.period,\n              children: row.period\n            }, row.period, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          variant: \"solid\",\n          onClick: handleBuildEmpData,\n          disabled: selectleaveyear === \"\",\n          children: \"Calc Leaves\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          variant: \"solid\",\n          onClick: onAlertOpen,\n          disabled: selectleaveyear === \"\",\n          children: \"Update Employees Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n        columns: columns,\n        data: empdata.filter(r => !r.hasresigned).sort((a, b) => a.name > b.name ? 1 : b.name > a.name ? -1 : 0),\n        title: \"Employee Leave Details\",\n        editable: {\n          onRowUpdate: (newData, oldData) => new Promise((resolve, reject) => {\n            setTimeout(() => {\n              const dataUpdate = [...empdata];\n              const index = oldData.tableData.id;\n              dataUpdate[index] = newData;\n              setEmpData([...dataUpdate]);\n              resolve();\n            }, 1000);\n          })\n        },\n        options: {\n          filtering: true,\n          search: true,\n          toolbar: false,\n          pageSize: 10,\n          headerStyle: {\n            backgroundColor: \"rgba(75, 192, 192, 1)\",\n            color: \"white\"\n          },\n          showTitle: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialogBox, {\n      onClose: onAlertClose,\n      onConfirm: handleOnUpdateConfirm,\n      isOpen: isAlertOpen,\n      title: \"Update Employees Profile\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Are you sure you want to update to Employee Profiles ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n}\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 0\n  }\n}));","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/EmployeeTableLeaveBF.js"],"names":["React","useState","useEffect","useMemo","MaterialTable","useNavigate","getYear","makeStyles","Box","Button","Container","Divider","Heading","Grid","GridItem","Radio","RadioGroup","HStack","Select","Tabs","TabList","TabPanels","Tab","TabPanel","useRadioGroup","useDisclosure","useEmployeesContext","useEmployees","useUpdateEmployees","useLeavesPeriod","usePeriods","useUpdatePeriods","AlertDialogBox","EmployeeTableLeaveBF","classes","useStyles","navigate","employees","setEmployeeId","periods","updatePeriods","updateEmployees","leavesperiod","setLeavePeriodYrId","empdata","setEmpData","toBuild","setToBuild","selectleaveyear","setSelectLeaveYear","yearperiod","filter","r","status","isOpen","isAlertOpen","onOpen","onAlertOpen","onClose","onAlertClose","setEditEmployeeID","setIsEditingOn","resetSingleEmployee","resetEmployees","columns","title","field","cellStyle","width","maxWidth","editable","type","backgroundColor","Build_EmpData","YEAR","emp","map","rec","leave_total","leave_taken","leave_pending","forEach","index","id","leavesdata","empid","Date","from_date","console","log","leaveTaken","reduce","acc","item","leavetype","no_of_days","leavePending","leaveOthers","leaveEntitled","isNaN","leave_entitled","leaveBf","leave_bf","leaveCd","leavebal","newleavebf","newtotalleaves","leave_cd","leave_others","leave_bal","newleave_bf","newleaves_total","handleBuildEmpData","UpdateLeaveYear","e","prev","parseInt","target","value","UpdateEmpProfile","olddata","newdata","handleOnUpdateConfirm","currperiod","period","toString","updatedperiod","rec_id","fields","row","hasresigned","sort","a","b","name","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","dataUpdate","tableData","filtering","search","toolbar","pageSize","headerStyle","color","showTitle","theme","root","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport getYear from \"date-fns/getYear\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Heading,\r\n  Grid,\r\n  GridItem,\r\n  Radio,\r\n  RadioGroup,\r\n  HStack,\r\n  Select,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  useRadioGroup,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\n//import AddIcon from \"@material-ui/icons/Add\";\r\n//import EditIcon from \"@material-ui/icons/Edit\";\r\n//import DeleteIcon from \"@material-ui/icons/Delete\";\r\n//import CheckIcon from \"@material-ui/icons/Check\";\r\n//import SearchIcon from \"@material-ui/icons/Search\";\r\n//import LeaveForm from \"./LeaveForm\";\r\n//import { CustomDialog } from \"../helpers/CustomDialog\";\r\n//import { AlertDialog } from \"../helpers/AlertDialogBox\";\r\n//import { useExpensesPeriod } from \"./expenses/useExpensesPeriod\";\r\nimport { useEmployeesContext } from \"../context/employees_context\";\r\nimport { useEmployees } from \"./employees/useEmployees\";\r\nimport { useUpdateEmployees } from \"./employees/useUpdateEmployees\";\r\nimport { useLeavesPeriod } from \"./leaves/useLeavesPeriod\";\r\nimport { usePeriods } from \"./periods/usePeriods\";\r\nimport { useUpdatePeriods } from \"./periods/useUpdatePeriods\";\r\nimport { AlertDialogBox } from \"../helpers/AlertDialogBox\";\r\n\r\nexport default function EmployeeTableLeaveBF() {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const { employees, setEmployeeId } = useEmployees();\r\n  const { periods } = usePeriods();\r\n  const updatePeriods = useUpdatePeriods();\r\n  const updateEmployees = useUpdateEmployees();\r\n  const { leavesperiod, setLeavePeriodYrId } = useLeavesPeriod();\r\n  const [empdata, setEmpData] = useState([]);\r\n  const [toBuild, setToBuild] = useState(true);\r\n  const [selectleaveyear, setSelectLeaveYear] = useState(\"\");\r\n\r\n  const yearperiod = periods.filter((r) => r.status !== \"C\");\r\n  // console.log('yearperiod', yearperiod)\r\n  // const YEAR = \"2022\"\r\n\r\n  //console.log(\"empdata\", empdata);\r\n\r\n  const {\r\n    isOpen: isAlertOpen,\r\n    onOpen: onAlertOpen,\r\n    onClose: onAlertClose,\r\n  } = useDisclosure();\r\n\r\n  const {\r\n    //editEmployeeID,\r\n    //employees_loading,\r\n    //deleteEmployee,\r\n    //loadEmployees,\r\n    setEditEmployeeID,\r\n    setIsEditingOn,\r\n    //setIsEditingOff,\r\n    resetSingleEmployee,\r\n    resetEmployees,\r\n    //getSingleEmployee,\r\n  } = useEmployeesContext();\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        title: \"Name\",\r\n        field: \"name\",\r\n        cellStyle: {\r\n          width: 250,\r\n          maxWidth: 250,\r\n        },\r\n        editable: \"never\",\r\n      },\r\n      // { title: \"IC No\", field: \"ic_no\" },\r\n      // { title: \"Gender\", field: \"gender\" },\r\n      // { title: \"Emp No\", field: \"empno\" },\r\n      // { title: \"Designation\", field: \"designation\" },\r\n      // { title: \"Department\", field: \"department\" },\r\n      {\r\n        title: \"Last Year Leave Balance\",\r\n        field: \"leave_bal\",\r\n        type: \"numeric\",\r\n        cellStyle: {\r\n          width: 60,\r\n        },\r\n        editable: \"never\",\r\n      },\r\n      {\r\n        title: \"Leave Entitled\",\r\n        field: \"leave_entitled\",\r\n        type: \"numeric\",\r\n        cellStyle: {\r\n          width: 60,\r\n          backgroundColor: \"#e6e7e3\",\r\n        },\r\n      },\r\n      {\r\n        title: \"Leave B/F\",\r\n        field: \"newleave_bf\",\r\n        type: \"numeric\",\r\n        cellStyle: {\r\n          width: 60,\r\n          backgroundColor: \"#e6e7e3\",\r\n        },\r\n      },\r\n      {\r\n        title: \"Total Leave\",\r\n        field: \"newleaves_total\",\r\n        type: \"numeric\",\r\n        cellStyle: {\r\n          width: 60,\r\n          backgroundColor: \"#e6e7e3\",\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const Build_EmpData = (YEAR) => {\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n      const emp = employees.map((rec) => {\r\n        return { ...rec, leave_total: 0, leave_taken: 0, leave_pending: 0 };\r\n      });\r\n      emp &&\r\n        emp.forEach((rec, index) => {\r\n          const {\r\n            id,\r\n            //name,\r\n            //icno,\r\n            //gender,\r\n            //designation,\r\n            //department,\r\n            //leave_entitled,\r\n            //leave_bf,\r\n            //leave_cd,\r\n          } = rec;\r\n          // calculate leaves\r\n\r\n          const leavesdata = leavesperiod.filter(\r\n            (r) => r.empid === id && getYear(new Date(r.from_date)) === YEAR\r\n          );\r\n\r\n          console.log(\"leavedata\", YEAR, leavesdata);\r\n          const leaveTaken = leavesdata.reduce((acc, item) => {\r\n            if (\r\n              item.status === \"Approved\" &&\r\n              item.leavetype === \"Annual Leave\"\r\n            ) {\r\n              return acc + item.no_of_days;\r\n            } else {\r\n              return acc;\r\n            }\r\n          }, 0);\r\n          const leavePending = leavesdata.reduce((acc, item) => {\r\n            if (item.status === \"Pending\") {\r\n              return acc + item.no_of_days;\r\n            } else {\r\n              return acc;\r\n            }\r\n          }, 0);\r\n          const leaveOthers = leavesdata.reduce((acc, item) => {\r\n            if (\r\n              item.status === \"Approved\" &&\r\n              item.leavetype !== \"Annual Leave\"\r\n            ) {\r\n              return acc + item.no_of_days;\r\n            } else {\r\n              return acc;\r\n            }\r\n          }, 0);\r\n          const leaveEntitled = isNaN(emp[index].leave_entitled)\r\n            ? 0\r\n            : emp[index].leave_entitled;\r\n          const leaveBf = isNaN(emp[index].leave_bf) ? 0 : emp[index].leave_bf;\r\n          //const leaveCd = isNaN(emp[index].leave_cd) ? 0 : emp[index].leave_cd;\r\n          const leaveCd = 0;\r\n          const leavebal = leaveEntitled + leaveBf - leaveCd - leaveTaken;\r\n          const newleavebf = leavebal > 5 ? 5 : leavebal;\r\n          const newtotalleaves = newleavebf + leaveEntitled;\r\n          emp[index].leave_entitled = leaveEntitled;\r\n          emp[index].leave_cd = leaveCd;\r\n          emp[index].leave_total = leaveEntitled + leaveBf;\r\n          emp[index].leave_taken = leaveTaken + leaveCd;\r\n          emp[index].leave_pending = leavePending;\r\n          emp[index].leave_others = leaveOthers;\r\n          emp[index].leave_bal = leavebal;\r\n\r\n          emp[index].newleave_bf = newleavebf;\r\n          emp[index].newleaves_total = newtotalleaves;\r\n          setEmpData(emp);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleBuildEmpData = () => {\r\n    if (selectleaveyear === \"\") {\r\n      return null;\r\n    }\r\n    Build_EmpData(selectleaveyear);\r\n  };\r\n\r\n  const UpdateLeaveYear = (e) => {\r\n    setSelectLeaveYear((prev) => (prev = parseInt(e.target.value)));\r\n    //Calc_Leave()\r\n    //setIsLoad(true);\r\n  };\r\n\r\n  const UpdateEmpProfile = () => {\r\n    empdata.forEach((rec) => {\r\n      const { id, leave_entitled, newleave_bf, newleaves_total } = rec;\r\n      const olddata = employees\r\n        .filter((r) => r.id === id)\r\n        .map((rec) => {\r\n          return { ...rec };\r\n        });\r\n      const newdata = {\r\n        ...olddata[0],\r\n        leave_entitled: leave_entitled,\r\n        leave_bf: newleave_bf,\r\n        leave_bal: newleaves_total,\r\n      };\r\n      updateEmployees({ id: id, ...newdata });\r\n    });\r\n  };\r\n\r\n  const handleOnUpdateConfirm = () => {\r\n    UpdateEmpProfile()\r\n    //console.log(\"post\", selectleaveyear, typeof selectleaveyear, periods);\r\n\r\n    //update periods\r\n    const currperiod = periods.filter(\r\n      (r) => r.period === selectleaveyear.toString()\r\n    );\r\n    const updatedperiod = { ...currperiod[0], status: \"C\" };\r\n    const { id, rec_id, ...fields } = updatedperiod;\r\n    updatePeriods({ id: updatedperiod.id, ...fields });\r\n    setEmpData([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLeavePeriodYrId(selectleaveyear);\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"leaveperiod\", leavesperiod);\r\n  //   Build_EmpData(YEAR);\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   setLeavePeriodYrId(YEAR);\r\n  //   console.log(\"leaveperiod\", leavesperiod)\r\n  //   if (leavesperiod.length > 0) {\r\n  //     Build_EmpData(YEAR);\r\n  //     setToBuild(false);\r\n  //   } else {\r\n  //     setToBuild(true);\r\n  //   }\r\n  // }, [toBuild]);\r\n\r\n  return (\r\n    <Container minW=\"container.lg\" minH={900}>\r\n      <Box py={2}>\r\n        <HStack>\r\n          <Heading size=\"md\">Leaves Balance Calculation B/F from Year </Heading>\r\n          <Select\r\n            value={selectleaveyear}\r\n            fontSize={20}\r\n            maxWidth={100}\r\n            onChange={(e) => UpdateLeaveYear(e)}\r\n          >\r\n            <option value=\"\">None</option>\r\n            {periods\r\n              .filter((r) => r.status !== \"C\")\r\n              .map((row) => {\r\n                return (\r\n                  <option key={row.period} value={row.period}>\r\n                    {row.period}\r\n                  </option>\r\n                );\r\n              })}\r\n          </Select>\r\n          <Button\r\n            colorScheme=\"teal\"\r\n            variant=\"solid\"\r\n            onClick={handleBuildEmpData}\r\n            disabled={selectleaveyear === \"\"}\r\n          >\r\n            Calc Leaves\r\n          </Button>\r\n          <Button\r\n            colorScheme=\"teal\"\r\n            variant=\"solid\"\r\n            onClick={onAlertOpen}\r\n            disabled={selectleaveyear === \"\"}\r\n          >\r\n            Update Employees Profile\r\n          </Button>\r\n        </HStack>\r\n      </Box>\r\n      <Box>\r\n        <MaterialTable\r\n          columns={columns}\r\n          data={empdata\r\n            .filter((r) => !r.hasresigned)\r\n            .sort((a, b) => (a.name > b.name ? 1 : b.name > a.name ? -1 : 0))}\r\n          title=\"Employee Leave Details\"\r\n          editable={{\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...empdata];\r\n                  const index = oldData.tableData.id;\r\n                  dataUpdate[index] = newData;\r\n                  setEmpData([...dataUpdate]);\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n          }}\r\n          options={{\r\n            filtering: true,\r\n            search: true,\r\n            toolbar: false,\r\n            pageSize: 10,\r\n            headerStyle: {\r\n              backgroundColor: \"rgba(75, 192, 192, 1)\",\r\n              color: \"white\",\r\n            },\r\n            showTitle: false,\r\n          }}\r\n        />\r\n      </Box>\r\n      <AlertDialogBox\r\n        onClose={onAlertClose}\r\n        onConfirm={handleOnUpdateConfirm}\r\n        isOpen={isAlertOpen}\r\n        title=\"Update Employees Profile\"\r\n      >\r\n        <h2>Are you sure you want to update to Employee Profiles ?</h2>\r\n      </AlertDialogBox>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n}));\r\n"]},"metadata":{},"sourceType":"module"}