{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\ExportLeave2Excel.js\";\nimport React from \"react\";\nimport ReactExport from \"react-data-export\"; //import { ExcelFile, ExcelSheet } from \"react-export-excel\";\n\nimport { Button } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\nconst cols = [{\n  title: \"Findings\",\n  width: {\n    wch: 100\n  }\n}];\nconst cols1 = [{\n  title: \"Name\",\n  width: {\n    wch: 50\n  }\n}, {\n  title: \"From Date\",\n  width: {\n    wch: 10\n  }\n}, {\n  title: \"To Date\",\n  width: {\n    wch: 10\n  }\n}, {\n  title: \"No of Days\",\n  width: {\n    wch: 10\n  }\n}, {\n  title: \"Type of Leaves\",\n  width: {\n    wch: 10\n  }\n}, {\n  title: \"Reason\",\n  width: {\n    wch: 50\n  }\n}, {\n  title: \"Status\",\n  width: {\n    wch: 50\n  }\n}];\nconst cols2 = [{\n  title: \"Name\"\n}, {\n  title: \"From Date\"\n}, {\n  title: \"To Date\"\n}, {\n  title: \"No of Days\"\n}, {\n  title: \"Reason\"\n}, {\n  title: \"Status\"\n}];\nconst data = [[{\n  value: \"H1\",\n  style: {\n    font: {\n      sz: \"24\",\n      bold: true\n    }\n  }\n}, {\n  value: \"Bold\",\n  style: {\n    font: {\n      bold: true\n    }\n  }\n}, {\n  value: \"Red\",\n  style: {\n    fill: {\n      patternType: \"solid\",\n      fgColor: {\n        rgb: \"FFFF0000\"\n      }\n    }\n  }\n}], [{\n  value: \"H2\",\n  style: {\n    font: {\n      sz: \"18\",\n      bold: true\n    }\n  }\n}, {\n  value: \"underline\",\n  style: {\n    font: {\n      underline: true\n    }\n  }\n}, {\n  value: \"Blue\",\n  style: {\n    fill: {\n      patternType: \"solid\",\n      fgColor: {\n        rgb: \"FF0000FF\"\n      }\n    }\n  }\n}], [{\n  value: \"H3\",\n  style: {\n    font: {\n      sz: \"14\",\n      bold: true\n    }\n  }\n}, {\n  value: \"italic\",\n  style: {\n    font: {\n      italic: true\n    }\n  }\n}, {\n  value: \"Green\",\n  style: {\n    fill: {\n      patternType: \"solid\",\n      fgColor: {\n        rgb: \"FF00FF00\"\n      }\n    }\n  }\n}], [{\n  value: \"H4\",\n  style: {\n    font: {\n      sz: \"12\",\n      bold: true\n    }\n  }\n}, {\n  value: \"strike\",\n  style: {\n    font: {\n      strike: true\n    }\n  }\n}, {\n  value: \"Orange\",\n  style: {\n    fill: {\n      patternType: \"solid\",\n      fgColor: {\n        rgb: \"FFF86B00\"\n      }\n    }\n  }\n}], [{\n  value: \"H5\",\n  style: {\n    font: {\n      sz: \"10.5\",\n      bold: true\n    }\n  }\n}, {\n  value: \"outline\",\n  style: {\n    font: {\n      outline: true\n    }\n  }\n}, {\n  value: \"Yellow\",\n  style: {\n    fill: {\n      patternType: \"solid\",\n      fgColor: {\n        rgb: \"FFFFFF00\"\n      }\n    }\n  }\n}], [{\n  value: \"H6\",\n  style: {\n    font: {\n      sz: \"7.5\",\n      bold: true\n    }\n  }\n}, {\n  value: \"shadow\",\n  style: {\n    font: {\n      shadow: true\n    }\n  }\n}, {\n  value: \"Light Blue\",\n  style: {\n    fill: {\n      patternType: \"solid\",\n      fgColor: {\n        rgb: \"FFCCEEFF\"\n      }\n    }\n  }\n}]];\nconst data1 = [[{\n  value: \"Johson Michael Angelo\",\n  style: {\n    font: {\n      sz: \"12\"\n    },\n    alignment: {\n      wrapText: true,\n      horizontal: \"center\",\n      vertical: \"top\"\n    }\n  }\n}, {\n  value: \"2021-12-04\",\n  style: {\n    font: {\n      sz: \"12\"\n    },\n    numFmt: \"dd/mm/yyyy\",\n    alignment: {\n      wrapText: true,\n      horizontal: \"center\",\n      vertical: \"top\"\n    }\n  }\n}, {\n  value: \"2021-12-04\",\n  style: {\n    font: {\n      sz: \"12\"\n    },\n    alignment: {\n      wrapText: true,\n      horizontal: \"center\",\n      vertical: \"top\"\n    }\n  }\n}, {\n  value: 3,\n  style: {\n    font: {\n      sz: \"12\"\n    },\n    alignment: {\n      wrapText: true,\n      horizontal: \"center\",\n      vertical: \"top\"\n    }\n  }\n}, {\n  value: \"Holiday\",\n  style: {\n    font: {\n      sz: \"12\"\n    },\n    alignment: {\n      wrapText: true,\n      horizontal: \"center\",\n      vertical: \"top\"\n    }\n  }\n}, {\n  value: \"Approved\",\n  style: {\n    font: {\n      sz: \"12\"\n    },\n    alignment: {\n      wrapText: true,\n      horizontal: \"center\",\n      vertical: \"top\"\n    }\n  }\n}], [{\n  value: \"David\",\n  style: {\n    font: {\n      sz: \"12\"\n    },\n    alignment: {\n      wrapText: true,\n      horizontal: \"center\",\n      vertical: \"top\"\n    }\n  }\n}, {\n  value: \"2021-12-11\",\n  style: {\n    font: {\n      sz: \"12\"\n    },\n    alignment: {\n      wrapText: true,\n      horizontal: \"center\",\n      vertical: \"top\"\n    }\n  }\n}, {\n  value: \"2021-12-14\",\n  style: {\n    font: {\n      sz: \"12\"\n    },\n    alignment: {\n      wrapText: true,\n      horizontal: \"center\",\n      vertical: \"top\"\n    }\n  }\n}, {\n  value: 3,\n  style: {\n    font: {\n      sz: \"12\"\n    },\n    alignment: {\n      wrapText: true,\n      horizontal: \"center\",\n      vertical: \"top\"\n    }\n  }\n}, {\n  value: \"Holiday\",\n  style: {\n    font: {\n      sz: \"12\"\n    },\n    alignment: {\n      wrapText: true,\n      horizontal: \"center\",\n      vertical: \"top\"\n    }\n  }\n}, {\n  value: \"Approved\",\n  style: {\n    font: {\n      sz: \"12\"\n    },\n    alignment: {\n      wrapText: true,\n      horizontal: \"center\",\n      vertical: \"top\"\n    }\n  }\n}]];\nconst multiDataSet = [{\n  columns: cols,\n  data: data1\n}];\nconst multiDataSet1 = [{\n  columns: [{\n    value: \"Name\",\n    widthPx: 50\n  }, // width in pixels\n  {\n    value: \"Salary\",\n    widthCh: 20\n  }, // width in charachters\n  {\n    value: \"Sex\",\n    widthPx: 60,\n    widthCh: 20\n  } // will check for width in pixels first\n  ],\n  data: [[\"Johnson\", 30000, \"Male\"], [\"Monika\", 355000, \"Female\"], [\"Konstantina\", 20000, \"Female\"], [\"John\", 250000, \"Male\"], [\"Josef\", 450500, \"Male\"]]\n}, {\n  xSteps: 1,\n  // Will start putting cell with 1 empty cell on left most\n  ySteps: 5,\n  //will put space of 5 rows,\n  columns: [\"Name\", \"Department\"],\n  data: [[\"Johnson\", \"Finance\"], [\"Monika\", \"IT\"], [\"Konstantina\", \"IT Billing\"], [\"John\", \"HR\"], [\"Josef\", \"Testing\"]]\n}];\n\nconst ExportLeave2Excel = ({\n  filename,\n  dataset,\n  title\n}) => {\n  return (\n    /*#__PURE__*/\n    // <ExcelFile element={<Button>Export to Excel</Button>} filename={filename}>\n    //   <ExcelSheet dataSet={multiDataSet1} name=\"Organization\" />\n    // </ExcelFile>\n    _jsxDEV(ExcelFile, {\n      element: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Export to Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }, this),\n      filename: filename,\n      children: /*#__PURE__*/_jsxDEV(ExcelSheet, {\n        dataSet: multiDataSet,\n        name: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 5\n    }, this) // <ExcelFile element={<Button>Export to Excel</Button>} filename={filename}>\n    //   <ExcelSheet data={dataset} name={title}>\n    //     <ExcelColumn label=\"Findings\" value=\"findings\" widthPx={100} />\n    //     <ExcelColumn label=\"Risks\" value=\"risks\" />\n    //     <ExcelColumn label=\"Type/Category\" value=\"category\" />\n    //     <ExcelColumn label=\"What\" value=\"what\" />\n    //     <ExcelColumn label=\"What Details\" value=\"what_details\" />\n    //     <ExcelColumn label=\"Why\" value=\"why\" />\n    //     <ExcelColumn label=\"Why Details\" value=\"why_details\" />\n    //     <ExcelColumn label=\"Discussion\" value=\"discussion\" />\n    //     <ExcelColumn label=\"Action\" value=\"action\" />\n    //     <ExcelColumn label=\"Follow-up Required?\" value=\"isfollowup\" />\n    //     <ExcelColumn label=\"Work Related?\" value=\"isworkrelated\" />\n    //     <ExcelColumn label=\"Raised By\" value=\"raisedby\" />\n    //     <ExcelColumn label=\"Raised On\" value=\"raisedon\" />\n    //     <ExcelColumn label=\"Location\" value=\"location\" />\n    //   </ExcelSheet>\n    // </ExcelFile>\n\n  );\n};\n\nexport default ExportLeave2Excel;","map":{"version":3,"sources":["D:/react-myprojects/hrms-airtable/src/components/ExportLeave2Excel.js"],"names":["React","ReactExport","Button","ExcelFile","ExcelSheet","ExcelColumn","cols","title","width","wch","cols1","cols2","data","value","style","font","sz","bold","fill","patternType","fgColor","rgb","underline","italic","strike","outline","shadow","data1","alignment","wrapText","horizontal","vertical","numFmt","multiDataSet","columns","multiDataSet1","widthPx","widthCh","xSteps","ySteps","ExportLeave2Excel","filename","dataset"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactExport from \"react-data-export\";\r\n//import { ExcelFile, ExcelSheet } from \"react-export-excel\";\r\nimport { Button } from \"@chakra-ui/react\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst cols = [{ title: \"Findings\", width: { wch: 100 } }];\r\n\r\nconst cols1 = [\r\n  { title: \"Name\", width: { wch: 50 } },\r\n  { title: \"From Date\", width: { wch: 10 } },\r\n  { title: \"To Date\", width: { wch: 10 } },\r\n  { title: \"No of Days\", width: { wch: 10 } },\r\n  { title: \"Type of Leaves\", width: { wch: 10 } },\r\n  { title: \"Reason\", width: { wch: 50 } },\r\n  { title: \"Status\", width: { wch: 50 } },\r\n];\r\n\r\nconst cols2 = [\r\n  { title: \"Name\" },\r\n  { title: \"From Date\" },\r\n  { title: \"To Date\" },\r\n  { title: \"No of Days\" },\r\n  { title: \"Reason\" },\r\n  { title: \"Status\" },\r\n];\r\n\r\nconst data = [\r\n  [\r\n    { value: \"H1\", style: { font: { sz: \"24\", bold: true } } },\r\n    { value: \"Bold\", style: { font: { bold: true } } },\r\n    {\r\n      value: \"Red\",\r\n      style: {\r\n        fill: { patternType: \"solid\", fgColor: { rgb: \"FFFF0000\" } },\r\n      },\r\n    },\r\n  ],\r\n  [\r\n    { value: \"H2\", style: { font: { sz: \"18\", bold: true } } },\r\n    { value: \"underline\", style: { font: { underline: true } } },\r\n    {\r\n      value: \"Blue\",\r\n      style: {\r\n        fill: { patternType: \"solid\", fgColor: { rgb: \"FF0000FF\" } },\r\n      },\r\n    },\r\n  ],\r\n  [\r\n    { value: \"H3\", style: { font: { sz: \"14\", bold: true } } },\r\n    { value: \"italic\", style: { font: { italic: true } } },\r\n    {\r\n      value: \"Green\",\r\n      style: {\r\n        fill: { patternType: \"solid\", fgColor: { rgb: \"FF00FF00\" } },\r\n      },\r\n    },\r\n  ],\r\n  [\r\n    { value: \"H4\", style: { font: { sz: \"12\", bold: true } } },\r\n    { value: \"strike\", style: { font: { strike: true } } },\r\n    {\r\n      value: \"Orange\",\r\n      style: {\r\n        fill: { patternType: \"solid\", fgColor: { rgb: \"FFF86B00\" } },\r\n      },\r\n    },\r\n  ],\r\n  [\r\n    { value: \"H5\", style: { font: { sz: \"10.5\", bold: true } } },\r\n    { value: \"outline\", style: { font: { outline: true } } },\r\n    {\r\n      value: \"Yellow\",\r\n      style: {\r\n        fill: { patternType: \"solid\", fgColor: { rgb: \"FFFFFF00\" } },\r\n      },\r\n    },\r\n  ],\r\n  [\r\n    { value: \"H6\", style: { font: { sz: \"7.5\", bold: true } } },\r\n    { value: \"shadow\", style: { font: { shadow: true } } },\r\n    {\r\n      value: \"Light Blue\",\r\n      style: {\r\n        fill: { patternType: \"solid\", fgColor: { rgb: \"FFCCEEFF\" } },\r\n      },\r\n    },\r\n  ],\r\n];\r\n\r\nconst data1 = [\r\n  [\r\n    {\r\n      value: \"Johson Michael Angelo\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"2021-12-04\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        numFmt: \"dd/mm/yyyy\",\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"2021-12-04\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: 3,\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"Holiday\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"Approved\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      value: \"David\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"2021-12-11\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"2021-12-14\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: 3,\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"Holiday\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      value: \"Approved\",\r\n      style: {\r\n        font: { sz: \"12\" },\r\n        alignment: {\r\n          wrapText: true,\r\n          horizontal: \"center\",\r\n          vertical: \"top\",\r\n        },\r\n      },\r\n    },\r\n  ],\r\n];\r\n\r\nconst multiDataSet = [\r\n  {\r\n    columns: cols,\r\n    data: data1,\r\n  },\r\n];\r\n\r\nconst multiDataSet1 = [\r\n  {\r\n    columns: [\r\n      { value: \"Name\", widthPx: 50 }, // width in pixels\r\n      { value: \"Salary\", widthCh: 20 }, // width in charachters\r\n      { value: \"Sex\", widthPx: 60, widthCh: 20 }, // will check for width in pixels first\r\n    ],\r\n    data: [\r\n      [\"Johnson\", 30000, \"Male\"],\r\n      [\"Monika\", 355000, \"Female\"],\r\n      [\"Konstantina\", 20000, \"Female\"],\r\n      [\"John\", 250000, \"Male\"],\r\n      [\"Josef\", 450500, \"Male\"],\r\n    ],\r\n  },\r\n  {\r\n    xSteps: 1, // Will start putting cell with 1 empty cell on left most\r\n    ySteps: 5, //will put space of 5 rows,\r\n    columns: [\"Name\", \"Department\"],\r\n    data: [\r\n      [\"Johnson\", \"Finance\"],\r\n      [\"Monika\", \"IT\"],\r\n      [\"Konstantina\", \"IT Billing\"],\r\n      [\"John\", \"HR\"],\r\n      [\"Josef\", \"Testing\"],\r\n    ],\r\n  },\r\n];\r\n\r\nconst ExportLeave2Excel = ({ filename, dataset, title }) => {\r\n  return (\r\n    // <ExcelFile element={<Button>Export to Excel</Button>} filename={filename}>\r\n    //   <ExcelSheet dataSet={multiDataSet1} name=\"Organization\" />\r\n    // </ExcelFile>\r\n\r\n    <ExcelFile element={<Button>Export to Excel</Button>} filename={filename}>\r\n      <ExcelSheet dataSet={multiDataSet} name=\"Leave\" />\r\n    </ExcelFile>\r\n\r\n    // <ExcelFile element={<Button>Export to Excel</Button>} filename={filename}>\r\n    //   <ExcelSheet data={dataset} name={title}>\r\n    //     <ExcelColumn label=\"Findings\" value=\"findings\" widthPx={100} />\r\n    //     <ExcelColumn label=\"Risks\" value=\"risks\" />\r\n    //     <ExcelColumn label=\"Type/Category\" value=\"category\" />\r\n    //     <ExcelColumn label=\"What\" value=\"what\" />\r\n    //     <ExcelColumn label=\"What Details\" value=\"what_details\" />\r\n    //     <ExcelColumn label=\"Why\" value=\"why\" />\r\n    //     <ExcelColumn label=\"Why Details\" value=\"why_details\" />\r\n    //     <ExcelColumn label=\"Discussion\" value=\"discussion\" />\r\n    //     <ExcelColumn label=\"Action\" value=\"action\" />\r\n    //     <ExcelColumn label=\"Follow-up Required?\" value=\"isfollowup\" />\r\n    //     <ExcelColumn label=\"Work Related?\" value=\"isworkrelated\" />\r\n    //     <ExcelColumn label=\"Raised By\" value=\"raisedby\" />\r\n    //     <ExcelColumn label=\"Raised On\" value=\"raisedon\" />\r\n    //     <ExcelColumn label=\"Location\" value=\"location\" />\r\n    //   </ExcelSheet>\r\n    // </ExcelFile>\r\n  );\r\n};\r\n\r\nexport default ExportLeave2Excel;\r\n"]},"metadata":{},"sourceType":"module"}