{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-myprojects\\\\hrms-airtable\\\\src\\\\components\\\\ExpenseForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Icon, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRecoilState } from \"recoil\";\n//import * as emailjs from \"emailjs-com\";\nimport axios from \"axios\";\nimport { nanoid } from \"nanoid\";\nimport currency from \"currency.js\";\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\nimport { Box, Grid, GridItem } from \"@chakra-ui/react\";\nimport { loginLevelState } from \"./data/atomdata\";\nimport { useExpensesContext } from \"../context/expenses_context\";\nimport { Controller, useForm } from \"react-hook-form\";\n//import { useCustomToast } from \"../helpers/useCustomToast\";\n//import { useExpenses } from \"./expenses/useExpenses\";\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\n//import { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\nimport { useExpensesAttachments } from \"./expensesattachments/useExpensesAttachments\";\nimport { useAddExpensesAttachment } from \"./expensesattachments/useAddExpensesAttachment\";\n//import { useUpdateExpensesAttachment } from \"./expensesattachments/useUpdateExpensesAttachment\";\nimport { useDeleteExpensesAttachment } from \"./expensesattachments/useDeleteExpensesAttachment\";\nimport ImageUpload from \"../helpers/ImageUpload\";\n\n//const SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\n//const TEMPLATE_ID = \"template_1y8odlq\";\n//const USER_ID = process.env.REACT_APP_EMAILJS_USERID;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UPLOADURL = \"https://api.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\n//const DOWNLOADURL = \"https://res.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\nconst UPLOADPRESET = \"appsmiths\";\n// const initial_values = {\n//   name: \"\",\n//   date: \"\",\n//   purchased_date: \"\",\n//   purchased_from: \"\",\n//   description: \"\",\n//   remark: \"\",\n//   status: \"Pending\",\n//   amount: 0,\n//};\n\nconst ExpenseForm = _ref => {\n  let {\n    formdata,\n    setFormdata,\n    handleDialogClose\n  } = _ref;\n  const classes = useStyles();\n  //const toast = useCustomToast();\n  //const { acceptedFiles, getRootProps, getInputProps } = useDropzone();\n  //const { expenses, filter, setFilter, setExpenseId } = useExpenses();\n  const updateExpenses = useUpdateExpenses();\n  const addExpenses = useAddExpenses();\n  //const delExpenses = useDeleteExpenses();\n  const {\n    expensesattachments\n  } = useExpensesAttachments();\n  const addExpensesAttachment = useAddExpensesAttachment();\n  const delExpensesAttachment = useDeleteExpensesAttachment();\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\n  const {\n    isExpenseEditing,\n    editExpenseID\n  } = useExpensesContext();\n  const [files, setFiles] = useState([]);\n  //const [filename, setFilename] = useState(\"\");\n  const [newFile, setNewFile] = useState({});\n  const [attachmentId, setAttachmentId] = useState(\"\");\n  const {\n    handleSubmit,\n    control\n  } = useForm({\n    defaultValues: {\n      ...formdata\n    }\n  });\n\n  //console.log(\"formdata\", formdata);\n  //console.log(\"files\", files);\n\n  const onDrop = acceptedFiles => {\n    acceptedFiles.forEach(file => {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"upload_preset\", UPLOADPRESET);\n      axios({\n        url: UPLOADURL,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        data: formData\n      }).then(res => {\n        //console.log(\"res\", res.data);\n        // Object.assign(file, {\n        //   preview: res.data.url,\n        // });\n        setFiles(prev => prev = [...files, ...[{\n          name: res.data.original_filename,\n          preview: res.data.secure_url\n        }]]);\n      }).catch(err => {\n        setNewFile({});\n        console.log(err);\n      });\n      // Object.assign(file, {\n      //   preview: URL.createObjectURL(file),\n      // });\n    });\n\n    //const allfiles = [...files, ...acceptedFiles];\n    //setFiles(allfiles);\n  };\n\n  /* const upLoad = () => {\r\n    const uploadURL = \"https://api.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\r\n    const uploadPreset = \"appsmiths\";\r\n      files.forEach((file) => {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"upload_preset\", uploadPreset);\r\n        axios({\r\n        url: uploadURL,\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        data: formData,\r\n      })\r\n        .then((res) => {\r\n          setFilename((prev) => (prev = res.data.public_id));\r\n          //console.log(res.data.public_id);\r\n          //console.log(\"filename\", filename);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    });\r\n  }; */\n\n  /* const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n      emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        //console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  }; */\n\n  const onSubmit = (data, e) => {\n    e.preventDefault();\n    //console.log(\"onSubmit\", isExpenseEditing);\n    let newData = {\n      ...data\n    };\n    //console.log(\"newdata\", newData);\n    //console.log(\"isEditing\", isExpenseEditing);\n    if (isExpenseEditing) {\n      //console.log(\"edit\");\n      const {\n        rec_id,\n        tableData,\n        ...editData\n      } = newData;\n      updateExpenses({\n        id: editExpenseID,\n        ...editData\n      });\n      //attachments\n      expensesattachments.filter(r => r.attachmentid === formdata.attachmentid).forEach(rec => {\n        const id = rec.id;\n        delExpensesAttachment(id);\n      });\n      files.forEach(rec => {\n        const newData = {\n          attachmentid: formdata.attachmentid,\n          name: rec.name,\n          url: rec.preview,\n          type: rec.preview.split(\".\").pop()\n        };\n        //console.log(\"addattach\", newData);\n        addExpensesAttachment(newData);\n      });\n    } else {\n      //console.log(\"new\", newData);\n      const newid = nanoid();\n      addExpenses({\n        ...newData,\n        empid: loginLevel.loginUserId,\n        name: loginLevel.loginUser,\n        attachmentid: newid\n      });\n      files.forEach(rec => {\n        const newData = {\n          attachmentid: newid,\n          name: rec.name,\n          url: rec.preview,\n          type: rec.preview.split(\".\").pop()\n        };\n        addExpensesAttachment(newData);\n      });\n    }\n\n    // if (isExpenseEditing) {\n    //   const { rec_id, tableData, ...editData } = newData;\n    //   console.log(\"edit\", ...editData);\n    //   updateExpenses({ id: editExpenseID, ...editData });\n    // } else {\n    //   console.log(\"new\");\n    //   addExpenses({\n    //     ...newData,\n    //     empid: loginLevel.loginUserId,\n    //     name: loginLevel.loginUser,\n    //   });\n    //   handleSentEmail(data);\n    // }\n\n    handleDialogClose();\n  };\n  useEffect(() => {\n    if (isExpenseEditing) {\n      setAttachmentId(formdata.attachmentid);\n      const newData = expensesattachments.filter(rec => rec.attachmentid === formdata.attachmentid).map(rec => {\n        return {\n          name: rec.name,\n          preview: rec.url\n        };\n      });\n\n      //console.log(\"data\", newData);\n\n      setFiles(newData);\n    } else {\n      setFiles([]);\n    }\n  }, [expensesattachments]);\n\n  // useEffect(() => {\n  //   console.log(\"setvalue\");\n  //   setValue(\"attachment1_name\", files.length > 0 ? files[0].name : \"\");\n  //   setValue(\"attachment2_name\", files.length > 1 ? files[1].name : \"\");\n  //   setValue(\"attachment3_name\", files.length > 2 ? files[2].name : \"\");\n  // }, [files]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      size: \"x1\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"EXPENSES CLAIM FORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        children: \"Expense Claim Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          templateColumns: \"repeat(3, 1fr)\",\n          gap: 4,\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 1,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"name\",\n                control: control,\n                defaultValue: loginLevel.loginUser,\n                render: _ref2 => {\n                  let {\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  } = _ref2;\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Name\",\n                    id: \"margin-normal1\",\n                    name: \"name\",\n                    defaultValue: loginLevel.loginUser,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 23\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"date\",\n                control: control,\n                defaultValue: formdata.date,\n                render: _ref3 => {\n                  let {\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  } = _ref3;\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Date\",\n                    type: \"date\",\n                    id: \"margin-normal2\",\n                    name: \"formdata.date\",\n                    value: value,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputLabelProps: {\n                      shrink: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 23\n                  }, this);\n                },\n                rules: {\n                  required: \"From Date is required\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"purchased_from\",\n                control: control,\n                defaultValue: formdata.purchased_from,\n                render: _ref4 => {\n                  let {\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  } = _ref4;\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Purchased From\",\n                    id: \"margin-normal3\",\n                    name: \"purchased_from\",\n                    defaultValue: formdata.purchased_from,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, this);\n                }\n                // rules={{ required: \"Reason is required\" }}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"description\",\n                control: control,\n                defaultValue: formdata.description,\n                render: _ref5 => {\n                  let {\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  } = _ref5;\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Description\",\n                    id: \"margin-normal4\",\n                    name: \"description\",\n                    defaultValue: formdata.description,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 23\n                  }, this);\n                }\n                // rules={{ required: \"Reason is required\" }}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"amount\",\n                control: control,\n                defaultValue: formdata.amount,\n                render: _ref6 => {\n                  let {\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  } = _ref6;\n                  return (\n                    /*#__PURE__*/\n                    // <TextField\n                    //   label=\"Amount\"\n                    //   type=\"number\"\n                    //   id=\"standard-number1\"\n                    //   name=\"amount\"\n                    //   defaultValue={formdata.amount}\n                    //   className={classes.textField}\n                    //   //onChange={onChange}\n                    //   onChange={(e) => {\n                    //     onChange(parseInt(e.target.value, 10));\n                    //   }}\n                    //   error={!!error}\n                    //   helperText={error ? error.message : null}\n                    // />\n                    _jsxDEV(CurrencyTextField, {\n                      label: \"Amount\",\n                      variant: \"standard\",\n                      value: formdata.amount,\n                      currencySymbol: \"$\",\n                      outputFormat: \"string\",\n                      decimalCharacter: \".\",\n                      digitGroupSeparator: \",\",\n                      decimalPlaces: \"2\",\n                      className: classes.textField,\n                      id: \"standard-amount\",\n                      name: \"amount\",\n                      style: {\n                        width: 100\n                      }\n                      //onChange={onChange}\n                      ,\n                      onChange: e => {\n                        onChange(parseFloat(currency(e.target.value), 10));\n                      },\n                      error: !!error,\n                      helperText: error ? error.message : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 23\n                    }, this)\n                  );\n                }\n                //rules={{ required: \"IC No required\" }}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"remark\",\n                control: control,\n                defaultValue: formdata.remark,\n                render: _ref7 => {\n                  let {\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  } = _ref7;\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Remark\",\n                    id: \"margin-normal5\",\n                    name: \"remark\",\n                    defaultValue: formdata.remark,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 23\n                  }, this);\n                }\n                // rules={{ required: \"Reason is required\" }}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"status\",\n                control: control,\n                defaultValue: formdata.status === \"Pending\" ? \"Pending\" : formdata.status,\n                render: _ref8 => {\n                  let {\n                    field: {\n                      onChange,\n                      value\n                    },\n                    fieldState: {\n                      error\n                    }\n                  } = _ref8;\n                  return /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Status\",\n                    id: \"margin-normal6\",\n                    name: \"status\",\n                    defaultValue: formdata.status === \"Pending\" ? \"Pending\" : formdata.status,\n                    className: classes.textField,\n                    onChange: onChange,\n                    error: !!error,\n                    helperText: error ? error.message : null,\n                    InputProps: {\n                      readOnly: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 23\n                  }, this);\n                }\n                //rules={{ required: \"Status is required\" }}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 15\n            }, this), formdata.status === \"Pending\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                className: classes.button\n                //onClick={() => handleSubmit(onSubmit)()}\n                ,\n                children: [\"Save \", /*#__PURE__*/_jsxDEV(Icon, {\n                  className: classes.rightIcon,\n                  children: \"send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            colSpan: 2,\n            children: /*#__PURE__*/_jsxDEV(ImageUpload, {\n              files: files,\n              setFiles: setFiles,\n              onDrop: onDrop\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  },\n  root: {\n    padding: theme.spacing(3, 2)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 400\n  }\n}));\nexport default ExpenseForm;","map":{"version":3,"names":["React","useState","useEffect","Button","Icon","TextField","Typography","makeStyles","useRecoilState","axios","nanoid","currency","CurrencyTextField","Box","Grid","GridItem","loginLevelState","useExpensesContext","Controller","useForm","useAddExpenses","useUpdateExpenses","useExpensesAttachments","useAddExpensesAttachment","useDeleteExpensesAttachment","ImageUpload","UPLOADURL","UPLOADPRESET","ExpenseForm","formdata","setFormdata","handleDialogClose","classes","useStyles","updateExpenses","addExpenses","expensesattachments","addExpensesAttachment","delExpensesAttachment","loginLevel","setLoginLevel","isExpenseEditing","editExpenseID","files","setFiles","newFile","setNewFile","attachmentId","setAttachmentId","handleSubmit","control","defaultValues","onDrop","acceptedFiles","forEach","file","formData","FormData","append","url","method","headers","data","then","res","prev","name","original_filename","preview","secure_url","catch","err","console","log","onSubmit","e","preventDefault","newData","rec_id","tableData","editData","id","filter","r","attachmentid","rec","type","split","pop","newid","empid","loginUserId","loginUser","map","field","onChange","value","fieldState","error","textField","message","readOnly","date","shrink","required","purchased_from","description","amount","width","parseFloat","target","remark","status","button","rightIcon","theme","margin","spacing","leftIcon","marginRight","marginLeft","iconSmall","fontSize","root","padding","container","display","flexWrap"],"sources":["D:/react-myprojects/hrms-airtable/src/components/ExpenseForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Icon, TextField,  Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useRecoilState } from \"recoil\";\r\n//import * as emailjs from \"emailjs-com\";\r\nimport axios from \"axios\";\r\nimport { nanoid } from \"nanoid\";\r\nimport currency from \"currency.js\";\r\nimport CurrencyTextField from \"@unicef/material-ui-currency-textfield\";\r\nimport { Box, Grid, GridItem } from \"@chakra-ui/react\";\r\nimport { loginLevelState } from \"./data/atomdata\";\r\nimport { useExpensesContext } from \"../context/expenses_context\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\n//import { useCustomToast } from \"../helpers/useCustomToast\";\r\n//import { useExpenses } from \"./expenses/useExpenses\";\r\nimport { useAddExpenses } from \"./expenses/useAddExpenses\";\r\n//import { useDeleteExpenses } from \"./expenses/useDeleteExpenses\";\r\nimport { useUpdateExpenses } from \"./expenses/useUpdateExpenses\";\r\nimport { useExpensesAttachments } from \"./expensesattachments/useExpensesAttachments\";\r\nimport { useAddExpensesAttachment } from \"./expensesattachments/useAddExpensesAttachment\";\r\n//import { useUpdateExpensesAttachment } from \"./expensesattachments/useUpdateExpensesAttachment\";\r\nimport { useDeleteExpensesAttachment } from \"./expensesattachments/useDeleteExpensesAttachment\";\r\nimport ImageUpload from \"../helpers/ImageUpload\";\r\n\r\n//const SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICEID;\r\n//const TEMPLATE_ID = \"template_1y8odlq\";\r\n//const USER_ID = process.env.REACT_APP_EMAILJS_USERID;\r\nconst UPLOADURL = \"https://api.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\r\n//const DOWNLOADURL = \"https://res.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\r\nconst UPLOADPRESET = \"appsmiths\";\r\n// const initial_values = {\r\n//   name: \"\",\r\n//   date: \"\",\r\n//   purchased_date: \"\",\r\n//   purchased_from: \"\",\r\n//   description: \"\",\r\n//   remark: \"\",\r\n//   status: \"Pending\",\r\n//   amount: 0,\r\n//};\r\n\r\nconst ExpenseForm = ({ formdata, setFormdata, handleDialogClose }) => {\r\n  const classes = useStyles();\r\n  //const toast = useCustomToast();\r\n  //const { acceptedFiles, getRootProps, getInputProps } = useDropzone();\r\n  //const { expenses, filter, setFilter, setExpenseId } = useExpenses();\r\n  const updateExpenses = useUpdateExpenses();\r\n  const addExpenses = useAddExpenses();\r\n  //const delExpenses = useDeleteExpenses();\r\n  const { expensesattachments } = useExpensesAttachments();\r\n  const addExpensesAttachment = useAddExpensesAttachment();\r\n  const delExpensesAttachment = useDeleteExpensesAttachment();\r\n  const [loginLevel, setLoginLevel] = useRecoilState(loginLevelState);\r\n  const { isExpenseEditing, editExpenseID } = useExpensesContext();\r\n  const [files, setFiles] = useState([]);\r\n  //const [filename, setFilename] = useState(\"\");\r\n  const [newFile, setNewFile] = useState({});\r\n  const [attachmentId, setAttachmentId] = useState(\"\");\r\n\r\n  const { handleSubmit, control } = useForm({\r\n    defaultValues: {\r\n      ...formdata,\r\n    },\r\n  });\r\n\r\n  //console.log(\"formdata\", formdata);\r\n  //console.log(\"files\", files);\r\n\r\n  const onDrop = (acceptedFiles) => {\r\n    acceptedFiles.forEach((file) => {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"upload_preset\", UPLOADPRESET);\r\n      axios({\r\n        url: UPLOADURL,\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        data: formData,\r\n      })\r\n        .then((res) => {\r\n          //console.log(\"res\", res.data);\r\n          // Object.assign(file, {\r\n          //   preview: res.data.url,\r\n          // });\r\n          setFiles(\r\n            (prev) =>\r\n              (prev = [\r\n                ...files,\r\n                ...[\r\n                  {\r\n                    name: res.data.original_filename,\r\n                    preview: res.data.secure_url,\r\n                  },\r\n                ],\r\n              ])\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          setNewFile({});\r\n          console.log(err);\r\n        });\r\n      // Object.assign(file, {\r\n      //   preview: URL.createObjectURL(file),\r\n      // });\r\n    });\r\n\r\n    //const allfiles = [...files, ...acceptedFiles];\r\n    //setFiles(allfiles);\r\n  };\r\n\r\n  /* const upLoad = () => {\r\n    const uploadURL = \"https://api.cloudinary.com/v1_1/dlmzwvakr/image/upload\";\r\n    const uploadPreset = \"appsmiths\";\r\n\r\n    files.forEach((file) => {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"upload_preset\", uploadPreset);\r\n\r\n      axios({\r\n        url: uploadURL,\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        data: formData,\r\n      })\r\n        .then((res) => {\r\n          setFilename((prev) => (prev = res.data.public_id));\r\n          //console.log(res.data.public_id);\r\n          //console.log(\"filename\", filename);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    });\r\n  }; */\r\n\r\n  /* const handleSentEmail = (data) => {\r\n    const { date } = data;\r\n    //console.log(\"expense form\", loginLevel);\r\n    var emaildata = {\r\n      to_name: loginLevel.loginUser,\r\n      to_email: loginLevel.loginEmail,\r\n      message: `Your expenses claim application dated on ${date} has been successfully submitted for approval`,\r\n      cc_to: loginLevel.reporting_email,\r\n    };\r\n\r\n    emailjs.send(SERVICE_ID, TEMPLATE_ID, emaildata, USER_ID).then(\r\n      function (response) {\r\n        //console.log(response.status, response.text);\r\n        toast({\r\n          title: `Email has sent successfully to ${emaildata.to_email}!`,\r\n          status: \"success\",\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n        toast({\r\n          title: `Email has fail to send to ${emaildata.to_email}!`,\r\n          status: \"warning\",\r\n        });\r\n      }\r\n    );\r\n  }; */\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.preventDefault();\r\n    //console.log(\"onSubmit\", isExpenseEditing);\r\n    let newData = {\r\n      ...data,\r\n    };\r\n    //console.log(\"newdata\", newData);\r\n    //console.log(\"isEditing\", isExpenseEditing);\r\n    if (isExpenseEditing) {\r\n      //console.log(\"edit\");\r\n      const { rec_id, tableData, ...editData } = newData;\r\n      updateExpenses({ id: editExpenseID, ...editData });\r\n      //attachments\r\n      expensesattachments\r\n        .filter((r) => r.attachmentid === formdata.attachmentid)\r\n        .forEach((rec) => {\r\n          const id = rec.id;\r\n          delExpensesAttachment(id);\r\n        });\r\n      files.forEach((rec) => {\r\n        const newData = {\r\n          attachmentid: formdata.attachmentid,\r\n          name: rec.name,\r\n          url: rec.preview,\r\n          type: rec.preview.split(\".\").pop(),\r\n        };\r\n        //console.log(\"addattach\", newData);\r\n        addExpensesAttachment(newData);\r\n      });\r\n    } else {\r\n      //console.log(\"new\", newData);\r\n      const newid = nanoid();\r\n      addExpenses({\r\n        ...newData,\r\n        empid: loginLevel.loginUserId,\r\n        name: loginLevel.loginUser,\r\n        attachmentid: newid,\r\n      });\r\n\r\n      files.forEach((rec) => {\r\n        const newData = {\r\n          attachmentid: newid,\r\n          name: rec.name,\r\n          url: rec.preview,\r\n          type: rec.preview.split(\".\").pop(),\r\n        };\r\n         addExpensesAttachment(newData);\r\n      });\r\n    }\r\n\r\n    // if (isExpenseEditing) {\r\n    //   const { rec_id, tableData, ...editData } = newData;\r\n    //   console.log(\"edit\", ...editData);\r\n    //   updateExpenses({ id: editExpenseID, ...editData });\r\n    // } else {\r\n    //   console.log(\"new\");\r\n    //   addExpenses({\r\n    //     ...newData,\r\n    //     empid: loginLevel.loginUserId,\r\n    //     name: loginLevel.loginUser,\r\n    //   });\r\n    //   handleSentEmail(data);\r\n    // }\r\n\r\n    handleDialogClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isExpenseEditing) {\r\n      setAttachmentId(formdata.attachmentid);\r\n      const newData = expensesattachments\r\n        .filter((rec) => rec.attachmentid === formdata.attachmentid)\r\n        .map((rec) => {\r\n          return {\r\n            name: rec.name,\r\n            preview: rec.url,\r\n          };\r\n        });\r\n\r\n      //console.log(\"data\", newData);\r\n\r\n      setFiles(newData);\r\n    } else {\r\n      setFiles([]);\r\n    }\r\n  }, [expensesattachments]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"setvalue\");\r\n  //   setValue(\"attachment1_name\", files.length > 0 ? files[0].name : \"\");\r\n  //   setValue(\"attachment2_name\", files.length > 1 ? files[1].name : \"\");\r\n  //   setValue(\"attachment3_name\", files.length > 2 ? files[2].name : \"\");\r\n  // }, [files]);\r\n\r\n  return (\r\n    <div>\r\n      <Box size=\"x1\">\r\n        <Typography variant=\"h5\" component=\"h3\">\r\n          EXPENSES CLAIM FORM\r\n        </Typography>\r\n        <Typography component=\"p\">Expense Claim Application</Typography>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid templateColumns=\"repeat(3, 1fr)\" gap={4}>\r\n            <GridItem colSpan={1}>\r\n              <div>\r\n                <Controller\r\n                  name=\"name\"\r\n                  control={control}\r\n                  defaultValue={loginLevel.loginUser}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Name\"\r\n                        id=\"margin-normal1\"\r\n                        name=\"name\"\r\n                        defaultValue={loginLevel.loginUser}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"date\"\r\n                  control={control}\r\n                  defaultValue={formdata.date}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Date\"\r\n                        type=\"date\"\r\n                        id=\"margin-normal2\"\r\n                        name=\"formdata.date\"\r\n                        value={value}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    );\r\n                  }}\r\n                  rules={{ required: \"From Date is required\" }}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <Controller\r\n                  name=\"purchased_from\"\r\n                  control={control}\r\n                  defaultValue={formdata.purchased_from}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Purchased From\"\r\n                        id=\"margin-normal3\"\r\n                        name=\"purchased_from\"\r\n                        defaultValue={formdata.purchased_from}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Reason is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"description\"\r\n                  control={control}\r\n                  defaultValue={formdata.description}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Description\"\r\n                        id=\"margin-normal4\"\r\n                        name=\"description\"\r\n                        defaultValue={formdata.description}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Reason is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"amount\"\r\n                  control={control}\r\n                  defaultValue={formdata.amount}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      // <TextField\r\n                      //   label=\"Amount\"\r\n                      //   type=\"number\"\r\n                      //   id=\"standard-number1\"\r\n                      //   name=\"amount\"\r\n                      //   defaultValue={formdata.amount}\r\n                      //   className={classes.textField}\r\n                      //   //onChange={onChange}\r\n                      //   onChange={(e) => {\r\n                      //     onChange(parseInt(e.target.value, 10));\r\n                      //   }}\r\n                      //   error={!!error}\r\n                      //   helperText={error ? error.message : null}\r\n                      // />\r\n                      <CurrencyTextField\r\n                        label=\"Amount\"\r\n                        variant=\"standard\"\r\n                        value={formdata.amount}\r\n                        currencySymbol=\"$\"\r\n                        outputFormat=\"string\"\r\n                        decimalCharacter=\".\"\r\n                        digitGroupSeparator=\",\"\r\n                        decimalPlaces=\"2\"\r\n                        className={classes.textField}\r\n                        id=\"standard-amount\"\r\n                        name=\"amount\"\r\n                        style={{ width: 100 }}\r\n                        //onChange={onChange}\r\n                        onChange={(e) => {\r\n                          onChange(parseFloat(currency(e.target.value), 10));\r\n                        }}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"IC No required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"remark\"\r\n                  control={control}\r\n                  defaultValue={formdata.remark}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Remark\"\r\n                        id=\"margin-normal5\"\r\n                        name=\"remark\"\r\n                        defaultValue={formdata.remark}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                      />\r\n                    );\r\n                  }}\r\n                  // rules={{ required: \"Reason is required\" }}\r\n                />\r\n              </div>\r\n              <div>\r\n                <Controller\r\n                  name=\"status\"\r\n                  control={control}\r\n                  defaultValue={\r\n                    formdata.status === \"Pending\" ? \"Pending\" : formdata.status\r\n                  }\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Status\"\r\n                        id=\"margin-normal6\"\r\n                        name=\"status\"\r\n                        defaultValue={\r\n                          formdata.status === \"Pending\"\r\n                            ? \"Pending\"\r\n                            : formdata.status\r\n                        }\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                  //rules={{ required: \"Status is required\" }}\r\n                />\r\n              </div>\r\n              {/* <div>\r\n                <Controller\r\n                  name=\"attachment1_name\"\r\n                  control={control}\r\n                  defaultValue={files.length >= 1 ? files[0].name : \"\"}\r\n                  defaultValue={formdata.attachment1_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Attachment #1\"\r\n                        id=\"margin-normal6\"\r\n                        name=\"attachment1_name\"\r\n                        defaultValue={files.length >= 1 ? files[0].name : \"\"}\r\n                        defaultValue={formdata.attachment1_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                />\r\n              </div> */}\r\n              {/*  <div>\r\n                <Controller\r\n                  name=\"attachment2_name\"\r\n                  control={control}\r\n                  defaultValue={formdata.attachment2_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Attachment #2\"\r\n                        id=\"margin-normal6\"\r\n                        name=\"attachment2_name\"\r\n                        defaultValue={formdata.attachment2_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                />\r\n              </div> */}\r\n              {/* <div>\r\n                <Controller\r\n                  name=\"attachment3_name\"\r\n                  control={control}\r\n                  defaultValue={formdata.attachment3_name}\r\n                  render={({\r\n                    field: { onChange, value },\r\n                    fieldState: { error },\r\n                  }) => {\r\n                    return (\r\n                      <TextField\r\n                        label=\"Attachment #3\"\r\n                        id=\"margin-normal6\"\r\n                        name=\"attachment3_name\"\r\n                        defaultValue={formdata.attachment3_name}\r\n                        className={classes.textField}\r\n                        onChange={onChange}\r\n                        error={!!error}\r\n                        helperText={error ? error.message : null}\r\n                        InputProps={{\r\n                          readOnly: true,\r\n                        }}\r\n                      ></TextField>\r\n                    );\r\n                  }}\r\n                />\r\n              </div> */}\r\n\r\n              {formdata.status === \"Pending\" && (\r\n                <div>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    //onClick={() => handleSubmit(onSubmit)()}\r\n                  >\r\n                    Save <Icon className={classes.rightIcon}>send</Icon>\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </GridItem>\r\n            <GridItem colSpan={2}>\r\n              <ImageUpload files={files} setFiles={setFiles} onDrop={onDrop} />\r\n            </GridItem>\r\n          </Grid>\r\n        </form>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 400,\r\n  },\r\n}));\r\n\r\nexport default ExpenseForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAGC,UAAU,QAAQ,mBAAmB;AACxE,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,cAAc,QAAQ,QAAQ;AACvC;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,iBAAiB,MAAM,wCAAwC;AACtE,SAASC,GAAG,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACtD,SAASC,eAAe,QAAQ,iBAAiB;AACjD,SAASC,kBAAkB,QAAQ,6BAA6B;AAChE,SAASC,UAAU,EAAEC,OAAO,QAAQ,iBAAiB;AACrD;AACA;AACA,SAASC,cAAc,QAAQ,2BAA2B;AAC1D;AACA,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,SAASC,sBAAsB,QAAQ,8CAA8C;AACrF,SAASC,wBAAwB,QAAQ,gDAAgD;AACzF;AACA,SAASC,2BAA2B,QAAQ,mDAAmD;AAC/F,OAAOC,WAAW,MAAM,wBAAwB;;AAEhD;AACA;AACA;AAAA;AACA,MAAMC,SAAS,GAAG,wDAAwD;AAC1E;AACA,MAAMC,YAAY,GAAG,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,QAAkD;EAAA,IAAjD;IAAEC,QAAQ;IAAEC,WAAW;IAAEC;EAAkB,CAAC;EAC/D,MAAMC,OAAO,GAAGC,SAAS,EAAE;EAC3B;EACA;EACA;EACA,MAAMC,cAAc,GAAGb,iBAAiB,EAAE;EAC1C,MAAMc,WAAW,GAAGf,cAAc,EAAE;EACpC;EACA,MAAM;IAAEgB;EAAoB,CAAC,GAAGd,sBAAsB,EAAE;EACxD,MAAMe,qBAAqB,GAAGd,wBAAwB,EAAE;EACxD,MAAMe,qBAAqB,GAAGd,2BAA2B,EAAE;EAC3D,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhC,cAAc,CAACQ,eAAe,CAAC;EACnE,MAAM;IAAEyB,gBAAgB;IAAEC;EAAc,CAAC,GAAGzB,kBAAkB,EAAE;EAChE,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EACtC;EACA,MAAM,CAAC4C,OAAO,EAAEC,UAAU,CAAC,GAAG7C,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAAC8C,YAAY,EAAEC,eAAe,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAM;IAAEgD,YAAY;IAAEC;EAAQ,CAAC,GAAG/B,OAAO,CAAC;IACxCgC,aAAa,EAAE;MACb,GAAGtB;IACL;EACF,CAAC,CAAC;;EAEF;EACA;;EAEA,MAAMuB,MAAM,GAAIC,aAAa,IAAK;IAChCA,aAAa,CAACC,OAAO,CAAEC,IAAI,IAAK;MAC9B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;MAC7BC,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE/B,YAAY,CAAC;MAC9ClB,KAAK,CAAC;QACJkD,GAAG,EAAEjC,SAAS;QACdkC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEN;MACR,CAAC,CAAC,CACCO,IAAI,CAAEC,GAAG,IAAK;QACb;QACA;QACA;QACA;QACApB,QAAQ,CACLqB,IAAI,IACFA,IAAI,GAAG,CACN,GAAGtB,KAAK,EACR,GAAG,CACD;UACEuB,IAAI,EAAEF,GAAG,CAACF,IAAI,CAACK,iBAAiB;UAChCC,OAAO,EAAEJ,GAAG,CAACF,IAAI,CAACO;QACpB,CAAC,CACF,CACD,CACL;MACH,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACdzB,UAAU,CAAC,CAAC,CAAC,CAAC;QACd0B,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC,CAAC;MACJ;MACA;MACA;IACF,CAAC,CAAC;;IAEF;IACA;EACF,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAIE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,MAAMG,QAAQ,GAAG,CAACZ,IAAI,EAAEa,CAAC,KAAK;IAC5BA,CAAC,CAACC,cAAc,EAAE;IAClB;IACA,IAAIC,OAAO,GAAG;MACZ,GAAGf;IACL,CAAC;IACD;IACA;IACA,IAAIrB,gBAAgB,EAAE;MACpB;MACA,MAAM;QAAEqC,MAAM;QAAEC,SAAS;QAAE,GAAGC;MAAS,CAAC,GAAGH,OAAO;MAClD3C,cAAc,CAAC;QAAE+C,EAAE,EAAEvC,aAAa;QAAE,GAAGsC;MAAS,CAAC,CAAC;MAClD;MACA5C,mBAAmB,CAChB8C,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,YAAY,KAAKvD,QAAQ,CAACuD,YAAY,CAAC,CACvD9B,OAAO,CAAE+B,GAAG,IAAK;QAChB,MAAMJ,EAAE,GAAGI,GAAG,CAACJ,EAAE;QACjB3C,qBAAqB,CAAC2C,EAAE,CAAC;MAC3B,CAAC,CAAC;MACJtC,KAAK,CAACW,OAAO,CAAE+B,GAAG,IAAK;QACrB,MAAMR,OAAO,GAAG;UACdO,YAAY,EAAEvD,QAAQ,CAACuD,YAAY;UACnClB,IAAI,EAAEmB,GAAG,CAACnB,IAAI;UACdP,GAAG,EAAE0B,GAAG,CAACjB,OAAO;UAChBkB,IAAI,EAAED,GAAG,CAACjB,OAAO,CAACmB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG;QAClC,CAAC;QACD;QACAnD,qBAAqB,CAACwC,OAAO,CAAC;MAChC,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACA,MAAMY,KAAK,GAAG/E,MAAM,EAAE;MACtByB,WAAW,CAAC;QACV,GAAG0C,OAAO;QACVa,KAAK,EAAEnD,UAAU,CAACoD,WAAW;QAC7BzB,IAAI,EAAE3B,UAAU,CAACqD,SAAS;QAC1BR,YAAY,EAAEK;MAChB,CAAC,CAAC;MAEF9C,KAAK,CAACW,OAAO,CAAE+B,GAAG,IAAK;QACrB,MAAMR,OAAO,GAAG;UACdO,YAAY,EAAEK,KAAK;UACnBvB,IAAI,EAAEmB,GAAG,CAACnB,IAAI;UACdP,GAAG,EAAE0B,GAAG,CAACjB,OAAO;UAChBkB,IAAI,EAAED,GAAG,CAACjB,OAAO,CAACmB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG;QAClC,CAAC;QACAnD,qBAAqB,CAACwC,OAAO,CAAC;MACjC,CAAC,CAAC;IACJ;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA9C,iBAAiB,EAAE;EACrB,CAAC;EAED7B,SAAS,CAAC,MAAM;IACd,IAAIuC,gBAAgB,EAAE;MACpBO,eAAe,CAACnB,QAAQ,CAACuD,YAAY,CAAC;MACtC,MAAMP,OAAO,GAAGzC,mBAAmB,CAChC8C,MAAM,CAAEG,GAAG,IAAKA,GAAG,CAACD,YAAY,KAAKvD,QAAQ,CAACuD,YAAY,CAAC,CAC3DS,GAAG,CAAER,GAAG,IAAK;QACZ,OAAO;UACLnB,IAAI,EAAEmB,GAAG,CAACnB,IAAI;UACdE,OAAO,EAAEiB,GAAG,CAAC1B;QACf,CAAC;MACH,CAAC,CAAC;;MAEJ;;MAEAf,QAAQ,CAACiC,OAAO,CAAC;IACnB,CAAC,MAAM;MACLjC,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC,EAAE,CAACR,mBAAmB,CAAC,CAAC;;EAEzB;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,uBACE,QAAC,GAAG;MAAC,IAAI,EAAC,IAAI;MAAA,wBACZ,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAC,SAAS,EAAC,IAAI;QAAA,UAAC;MAExC;QAAA;QAAA;QAAA;MAAA,QAAa,eACb,QAAC,UAAU;QAAC,SAAS,EAAC,GAAG;QAAA,UAAC;MAAyB;QAAA;QAAA;QAAA;MAAA,QAAa,eAChE;QAAM,QAAQ,EAAEa,YAAY,CAACyB,QAAQ,CAAE;QAAA,uBACrC,QAAC,IAAI;UAAC,eAAe,EAAC,gBAAgB;UAAC,GAAG,EAAE,CAAE;UAAA,wBAC5C,QAAC,QAAQ;YAAC,OAAO,EAAE,CAAE;YAAA,wBACnB;cAAA,uBACE,QAAC,UAAU;gBACT,IAAI,EAAC,MAAM;gBACX,OAAO,EAAExB,OAAQ;gBACjB,YAAY,EAAEX,UAAU,CAACqD,SAAU;gBACnC,MAAM,EAAE,SAGF;kBAAA,IAHG;oBACPE,KAAK,EAAE;sBAAEC,QAAQ;sBAAEC;oBAAM,CAAC;oBAC1BC,UAAU,EAAE;sBAAEC;oBAAM;kBACtB,CAAC;kBACC,oBACE,QAAC,SAAS;oBACR,KAAK,EAAC,MAAM;oBACZ,EAAE,EAAC,gBAAgB;oBACnB,IAAI,EAAC,MAAM;oBACX,YAAY,EAAE3D,UAAU,CAACqD,SAAU;oBACnC,SAAS,EAAE5D,OAAO,CAACmE,SAAU;oBAC7B,QAAQ,EAAEJ,QAAS;oBACnB,KAAK,EAAE,CAAC,CAACG,KAAM;oBACf,UAAU,EAAEA,KAAK,GAAGA,KAAK,CAACE,OAAO,GAAG,IAAK;oBACzC,UAAU,EAAE;sBACVC,QAAQ,EAAE;oBACZ;kBAAE;oBAAA;oBAAA;oBAAA;kBAAA,QACS;gBAEjB;cAAE;gBAAA;gBAAA;gBAAA;cAAA;YACF;cAAA;cAAA;cAAA;YAAA,QACE,eACN;cAAA,uBACE,QAAC,UAAU;gBACT,IAAI,EAAC,MAAM;gBACX,OAAO,EAAEnD,OAAQ;gBACjB,YAAY,EAAErB,QAAQ,CAACyE,IAAK;gBAC5B,MAAM,EAAE,SAGF;kBAAA,IAHG;oBACPR,KAAK,EAAE;sBAAEC,QAAQ;sBAAEC;oBAAM,CAAC;oBAC1BC,UAAU,EAAE;sBAAEC;oBAAM;kBACtB,CAAC;kBACC,oBACE,QAAC,SAAS;oBACR,KAAK,EAAC,MAAM;oBACZ,IAAI,EAAC,MAAM;oBACX,EAAE,EAAC,gBAAgB;oBACnB,IAAI,EAAC,eAAe;oBACpB,KAAK,EAAEF,KAAM;oBACb,SAAS,EAAEhE,OAAO,CAACmE,SAAU;oBAC7B,QAAQ,EAAEJ,QAAS;oBACnB,KAAK,EAAE,CAAC,CAACG,KAAM;oBACf,UAAU,EAAEA,KAAK,GAAGA,KAAK,CAACE,OAAO,GAAG,IAAK;oBACzC,eAAe,EAAE;sBACfG,MAAM,EAAE;oBACV;kBAAE;oBAAA;oBAAA;oBAAA;kBAAA,QACF;gBAEN,CAAE;gBACF,KAAK,EAAE;kBAAEC,QAAQ,EAAE;gBAAwB;cAAE;gBAAA;gBAAA;gBAAA;cAAA;YAC7C;cAAA;cAAA;cAAA;YAAA,QACE,eAEN;cAAA,uBACE,QAAC,UAAU;gBACT,IAAI,EAAC,gBAAgB;gBACrB,OAAO,EAAEtD,OAAQ;gBACjB,YAAY,EAAErB,QAAQ,CAAC4E,cAAe;gBACtC,MAAM,EAAE,SAGF;kBAAA,IAHG;oBACPX,KAAK,EAAE;sBAAEC,QAAQ;sBAAEC;oBAAM,CAAC;oBAC1BC,UAAU,EAAE;sBAAEC;oBAAM;kBACtB,CAAC;kBACC,oBACE,QAAC,SAAS;oBACR,KAAK,EAAC,gBAAgB;oBACtB,EAAE,EAAC,gBAAgB;oBACnB,IAAI,EAAC,gBAAgB;oBACrB,YAAY,EAAErE,QAAQ,CAAC4E,cAAe;oBACtC,SAAS,EAAEzE,OAAO,CAACmE,SAAU;oBAC7B,QAAQ,EAAEJ,QAAS;oBACnB,KAAK,EAAE,CAAC,CAACG,KAAM;oBACf,UAAU,EAAEA,KAAK,GAAGA,KAAK,CAACE,OAAO,GAAG;kBAAK;oBAAA;oBAAA;oBAAA;kBAAA,QACzC;gBAEN;gBACA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YACA;cAAA;cAAA;cAAA;YAAA,QACE,eACN;cAAA,uBACE,QAAC,UAAU;gBACT,IAAI,EAAC,aAAa;gBAClB,OAAO,EAAElD,OAAQ;gBACjB,YAAY,EAAErB,QAAQ,CAAC6E,WAAY;gBACnC,MAAM,EAAE,SAGF;kBAAA,IAHG;oBACPZ,KAAK,EAAE;sBAAEC,QAAQ;sBAAEC;oBAAM,CAAC;oBAC1BC,UAAU,EAAE;sBAAEC;oBAAM;kBACtB,CAAC;kBACC,oBACE,QAAC,SAAS;oBACR,KAAK,EAAC,aAAa;oBACnB,EAAE,EAAC,gBAAgB;oBACnB,IAAI,EAAC,aAAa;oBAClB,YAAY,EAAErE,QAAQ,CAAC6E,WAAY;oBACnC,SAAS,EAAE1E,OAAO,CAACmE,SAAU;oBAC7B,QAAQ,EAAEJ,QAAS;oBACnB,KAAK,EAAE,CAAC,CAACG,KAAM;oBACf,UAAU,EAAEA,KAAK,GAAGA,KAAK,CAACE,OAAO,GAAG;kBAAK;oBAAA;oBAAA;oBAAA;kBAAA,QACzC;gBAEN;gBACA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YACA;cAAA;cAAA;cAAA;YAAA,QACE,eACN;cAAA,uBACE,QAAC,UAAU;gBACT,IAAI,EAAC,QAAQ;gBACb,OAAO,EAAElD,OAAQ;gBACjB,YAAY,EAAErB,QAAQ,CAAC8E,MAAO;gBAC9B,MAAM,EAAE,SAGF;kBAAA,IAHG;oBACPb,KAAK,EAAE;sBAAEC,QAAQ;sBAAEC;oBAAM,CAAC;oBAC1BC,UAAU,EAAE;sBAAEC;oBAAM;kBACtB,CAAC;kBACC;oBAAA;oBACE;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA,QAAC,iBAAiB;sBAChB,KAAK,EAAC,QAAQ;sBACd,OAAO,EAAC,UAAU;sBAClB,KAAK,EAAErE,QAAQ,CAAC8E,MAAO;sBACvB,cAAc,EAAC,GAAG;sBAClB,YAAY,EAAC,QAAQ;sBACrB,gBAAgB,EAAC,GAAG;sBACpB,mBAAmB,EAAC,GAAG;sBACvB,aAAa,EAAC,GAAG;sBACjB,SAAS,EAAE3E,OAAO,CAACmE,SAAU;sBAC7B,EAAE,EAAC,iBAAiB;sBACpB,IAAI,EAAC,QAAQ;sBACb,KAAK,EAAE;wBAAES,KAAK,EAAE;sBAAI;sBACpB;sBAAA;sBACA,QAAQ,EAAGjC,CAAC,IAAK;wBACfoB,QAAQ,CAACc,UAAU,CAAClG,QAAQ,CAACgE,CAAC,CAACmC,MAAM,CAACd,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;sBACpD,CAAE;sBACF,KAAK,EAAE,CAAC,CAACE,KAAM;sBACf,UAAU,EAAEA,KAAK,GAAGA,KAAK,CAACE,OAAO,GAAG;oBAAK;sBAAA;sBAAA;sBAAA;oBAAA;kBACzC;gBAEN;gBACA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YACA;cAAA;cAAA;cAAA;YAAA,QACE,eACN;cAAA,uBACE,QAAC,UAAU;gBACT,IAAI,EAAC,QAAQ;gBACb,OAAO,EAAElD,OAAQ;gBACjB,YAAY,EAAErB,QAAQ,CAACkF,MAAO;gBAC9B,MAAM,EAAE,SAGF;kBAAA,IAHG;oBACPjB,KAAK,EAAE;sBAAEC,QAAQ;sBAAEC;oBAAM,CAAC;oBAC1BC,UAAU,EAAE;sBAAEC;oBAAM;kBACtB,CAAC;kBACC,oBACE,QAAC,SAAS;oBACR,KAAK,EAAC,QAAQ;oBACd,EAAE,EAAC,gBAAgB;oBACnB,IAAI,EAAC,QAAQ;oBACb,YAAY,EAAErE,QAAQ,CAACkF,MAAO;oBAC9B,SAAS,EAAE/E,OAAO,CAACmE,SAAU;oBAC7B,QAAQ,EAAEJ,QAAS;oBACnB,KAAK,EAAE,CAAC,CAACG,KAAM;oBACf,UAAU,EAAEA,KAAK,GAAGA,KAAK,CAACE,OAAO,GAAG;kBAAK;oBAAA;oBAAA;oBAAA;kBAAA,QACzC;gBAEN;gBACA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YACA;cAAA;cAAA;cAAA;YAAA,QACE,eACN;cAAA,uBACE,QAAC,UAAU;gBACT,IAAI,EAAC,QAAQ;gBACb,OAAO,EAAElD,OAAQ;gBACjB,YAAY,EACVrB,QAAQ,CAACmF,MAAM,KAAK,SAAS,GAAG,SAAS,GAAGnF,QAAQ,CAACmF,MACtD;gBACD,MAAM,EAAE,SAGF;kBAAA,IAHG;oBACPlB,KAAK,EAAE;sBAAEC,QAAQ;sBAAEC;oBAAM,CAAC;oBAC1BC,UAAU,EAAE;sBAAEC;oBAAM;kBACtB,CAAC;kBACC,oBACE,QAAC,SAAS;oBACR,KAAK,EAAC,QAAQ;oBACd,EAAE,EAAC,gBAAgB;oBACnB,IAAI,EAAC,QAAQ;oBACb,YAAY,EACVrE,QAAQ,CAACmF,MAAM,KAAK,SAAS,GACzB,SAAS,GACTnF,QAAQ,CAACmF,MACd;oBACD,SAAS,EAAEhF,OAAO,CAACmE,SAAU;oBAC7B,QAAQ,EAAEJ,QAAS;oBACnB,KAAK,EAAE,CAAC,CAACG,KAAM;oBACf,UAAU,EAAEA,KAAK,GAAGA,KAAK,CAACE,OAAO,GAAG,IAAK;oBACzC,UAAU,EAAE;sBACVC,QAAQ,EAAE;oBACZ;kBAAE;oBAAA;oBAAA;oBAAA;kBAAA,QACS;gBAEjB;gBACA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YACA;cAAA;cAAA;cAAA;YAAA,QACE,EAqFLxE,QAAQ,CAACmF,MAAM,KAAK,SAAS,iBAC5B;cAAA,uBACE,QAAC,MAAM;gBACL,IAAI,EAAC,QAAQ;gBACb,OAAO,EAAC,WAAW;gBACnB,KAAK,EAAC,SAAS;gBACf,SAAS,EAAEhF,OAAO,CAACiF;gBACnB;gBAAA;gBAAA,WACD,OACM,uBAAC,IAAI;kBAAC,SAAS,EAAEjF,OAAO,CAACkF,SAAU;kBAAA,UAAC;gBAAI;kBAAA;kBAAA;kBAAA;gBAAA,QAAO;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAC7C;cAAA;cAAA;cAAA;YAAA,QAEZ;UAAA;YAAA;YAAA;YAAA;UAAA,QACQ,eACX,QAAC,QAAQ;YAAC,OAAO,EAAE,CAAE;YAAA,uBACnB,QAAC,WAAW;cAAC,KAAK,EAAEvE,KAAM;cAAC,QAAQ,EAAEC,QAAS;cAAC,MAAM,EAAEQ;YAAO;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QACxD;QAAA;UAAA;UAAA;UAAA;QAAA;MACN;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAED,MAAMnB,SAAS,GAAG1B,UAAU,CAAE4G,KAAK,KAAM;EACvCF,MAAM,EAAE;IACNG,MAAM,EAAED,KAAK,CAACE,OAAO,CAAC,CAAC;EACzB,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAEJ,KAAK,CAACE,OAAO,CAAC,CAAC;EAC9B,CAAC;EACDH,SAAS,EAAE;IACTM,UAAU,EAAEL,KAAK,CAACE,OAAO,CAAC,CAAC;EAC7B,CAAC;EACDI,SAAS,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC;EACDC,IAAI,EAAE;IACJC,OAAO,EAAET,KAAK,CAACE,OAAO,CAAC,CAAC,EAAE,CAAC;EAC7B,CAAC;EACDQ,SAAS,EAAE;IACTC,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAE;EACZ,CAAC;EACD5B,SAAS,EAAE;IACTqB,UAAU,EAAEL,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC;IAC5BE,WAAW,EAAEJ,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC;IAC7BT,KAAK,EAAE;EACT;AACF,CAAC,CAAC,CAAC;AAEH,eAAehF,WAAW"},"metadata":{},"sourceType":"module"}